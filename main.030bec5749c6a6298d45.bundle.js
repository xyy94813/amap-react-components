(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1128:function(module,exports,__webpack_require__){"use strict";__webpack_require__(8),__webpack_require__(4),__webpack_require__(53),__webpack_require__(1129),__webpack_require__(40),__webpack_require__(41),__webpack_require__(1130),__webpack_require__(33),__webpack_require__(42);var _clientApi=__webpack_require__(59),_clientLogger=__webpack_require__(38),_configFilename=__webpack_require__(1131);function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(_configFilename.args||_configFilename.argTypes)&&_clientLogger.logger.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify({args:_configFilename.args,argTypes:_configFilename.argTypes})),_configFilename.decorators&&_configFilename.decorators.forEach((function(decorator){return(0,_clientApi.addDecorator)(decorator,!1)})),_configFilename.loaders&&_configFilename.loaders.forEach((function(loader){return(0,_clientApi.addLoader)(loader,!1)})),(_configFilename.parameters||_configFilename.globals||_configFilename.globalTypes)&&(0,_clientApi.addParameters)(_objectSpread(_objectSpread({},_configFilename.parameters),{},{globals:_configFilename.globals,globalTypes:_configFilename.globalTypes}),!1),_configFilename.argTypesEnhancers&&_configFilename.argTypesEnhancers.forEach((function(enhancer){return(0,_clientApi.addArgTypesEnhancer)(enhancer)}))},1131:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"decorators",(function(){return decorators})),__webpack_require__.d(__webpack_exports__,"parameters",(function(){return parameters})),__webpack_require__.d(__webpack_exports__,"globalTypes",(function(){return globalTypes}));var decorators=[],parameters={},globalTypes={}},1132:function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__(393).configure)([__webpack_require__(1133)],module,!1)}).call(this,__webpack_require__(127)(module))},1133:function(module,exports,__webpack_require__){var map={"./components/AMapAPIContainer/stories/createAMapAPIContainer.stories.tsx":225,"./components/AMapControlBar/stories/AMapControlBar.stories.tsx":1134,"./components/AMapGeoJSON/stories/AMapGeoJSON.stories.tsx":1135,"./components/AMapHawkEye/stories/AMapHawkEye.stories.tsx":1136,"./components/AMapMap/stories/AMapMap.stories.tsx":62,"./components/AMapMouseTool/stories/AMapMouseTool.stories.tsx":1137,"./components/AMapScale/stories/AMapScale.stories.tsx":1138,"./components/AMapToolBar/stories/AMapToolBar.stories.tsx":1139};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1133},1134:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"ChangeOffset",(function(){return ChangeOffset})),__webpack_require__.d(__webpack_exports__,"ChangePosition",(function(){return ChangePosition})),__webpack_require__.d(__webpack_exports__,"HideControlButton",(function(){return HideControlButton}));__webpack_require__(3),__webpack_require__(91);var react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(69),index__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(29),_AMapMap_stories_AMapMap_stories__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(62),__assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},eventHandler=Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.actions)("onShow","onHide");__webpack_exports__.default={title:"Components/Control/AMapControlBar",component:index__WEBPACK_IMPORTED_MODULE_4__.a,decorators:[_AMapMap_stories_AMapMap_stories__WEBPACK_IMPORTED_MODULE_5__.withAMapContainer],args:{position:"LT",offset:[0,0],showControlButton:!0,visible:!0,onShow:eventHandler.onShow,onHide:eventHandler.onHide},argTypes:{position:{description:"控件停靠位置",table:{type:{summary:"string|object"},defaultValue:{summary:"LT"}},control:{type:"select",options:["LT","RT","LB","RB"]}},offset:{description:"相对于地图容器偏移量，正数代表地图中心，复数向地图外侧(实际现象与高德地图官方文档不一致)。",type:{summary:"array",required:!1},control:"array"},showControlButton:{description:"是否显示倾斜、旋转按钮。",table:{type:{summary:"boolean"},defaultValue:{summary:!0}},control:"boolean"},visible:{description:"显示或隐藏",control:"boolean"},onShow:{description:"显示时触发此事件"},onHide:{description:"隐藏时触发此事件"}}};var Template=function Template(args){return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(index__WEBPACK_IMPORTED_MODULE_4__.a,__assign({},args))},ChangeOffset=Template.bind({});ChangeOffset.args={offset:[20,20]};var ChangePosition=Template.bind({});ChangePosition.args={position:"RT"};var HideControlButton=Template.bind({showControlButton:!1});HideControlButton.args={showControlButton:!1},ChangeOffset.parameters=__assign({storySource:{source:"(args) => <AMapControlBar {...args} />"}},ChangeOffset.parameters),ChangePosition.parameters=__assign({storySource:{source:"(args) => <AMapControlBar {...args} />"}},ChangePosition.parameters),HideControlButton.parameters=__assign({storySource:{source:"Template.bind({ showControlButton: false })"}},HideControlButton.parameters)},1135:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),function(global){__webpack_require__.d(__webpack_exports__,"WithGeoJSON",(function(){return WithGeoJSON})),__webpack_require__.d(__webpack_exports__,"CustomOverlay",(function(){return CustomOverlay}));__webpack_require__(3),__webpack_require__(13),__webpack_require__(310),__webpack_require__(91);var react__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_4__),index__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(29),_AMapMap_stories_AMapMap_stories__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(62),_hooks_useAMap__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(43),__assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},mockData={type:"FeatureCollection",features:[{type:"Feature",properties:{},geometry:{type:"GeometryCollection",geometries:[{type:"Point",coordinates:[116.39,39.9]},{type:"Polygon",coordinates:[[[116.384595,39.901321],[116.383526,39.899865],[116.386284,39.900917]],[[116.384594,39.901],[116.384,39.9003],[116.3861,39.900917]]]},{type:"LineString",coordinates:[[116.388904,39.903423],[116.392122,39.901176]]}]}}]},AMapAutoFitView=function AMapAutoFitView(_a){var delay=_a.delay,map=Object(_hooks_useAMap__WEBPACK_IMPORTED_MODULE_7__.a)().map,_b=Object(react__WEBPACK_IMPORTED_MODULE_4__.useState)(!1),fitViewed=_b[0],setFitViewed=_b[1];return Object(react__WEBPACK_IMPORTED_MODULE_4__.useEffect)((function(){var clearEffect;if(fitViewed)return clearEffect;var timeoutKey=setTimeout((function(){map&&(map.setFitView(),setFitViewed(!0))}),delay);return clearEffect=function clearEffect(){global.clearTimeout(timeoutKey)}}),[delay,map,fitViewed]),null};AMapAutoFitView.defaultProps={delay:2e3},__webpack_exports__.default={title:"Components/Overlay/AMapGeoJSON",decorators:[_AMapMap_stories_AMapMap_stories__WEBPACK_IMPORTED_MODULE_6__.withAMapContainer],argTypes:{geoJSON:{description:"要加载的标准 GeoJSON 对象",type:{name:"other",value:"",required:!0},table:{type:{summary:"GeoJSON",detail:"AMap 暂时不支持 `Feature`，需要转换成 `FeatureCollection`"}}},options:{description:"修改覆盖物属性(包括线样式、样色等等)",type:{name:"other",value:"",required:!1},table:{type:{summary:"Object",detail:"具体字段参考高德 JS API 文档"}}},getMarker:{description:"指定点要素的绘制方式，缺省时为 Marker 的默认样式。",table:{type:{summary:"(geojson?: GeoJSON.GeoJSON, lnglat?: GeoJSON.Point, map?: AMap.Map | null, AMap?: AMap.AMap) => AMap.Overlay"}}},getPolyline:{description:"指定点要素的绘制方式，缺省时为 Polyline 的默认样式。",table:{type:{summary:"(geojson?: GeoJSON.GeoJSON, lnglat?: GeoJSON.Point, map?: AMap.Map | null, AMap?: AMap.AMap) => AMap.Overlay"}}},getPolygon:{description:"指定点要素的绘制方式，缺省时为 Polygon 的默认样式。",table:{type:{summary:"(geojson?: GeoJSON.GeoJSON, lnglat?: GeoJSON.Point, map?: AMap.Map | null, AMap?: AMap.AMap) => AMap.Overlay"}}}}};var Template=function Template(args){return react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_4___default.a.Fragment,null,react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(index__WEBPACK_IMPORTED_MODULE_5__.b,__assign({},args)),react__WEBPACK_IMPORTED_MODULE_4___default.a.createElement(AMapAutoFitView,null))},WithGeoJSON=Template.bind({});WithGeoJSON.args={geoJSON:mockData};var CustomOverlay=Template.bind({});CustomOverlay.args={geoJSON:mockData,options:{strokeColor:"red",strokeWeight:4},getMarker:function getMarker(_,lnglat,map,AMap){var options={position:lnglat,map:map,label:{offset:[],direction:"Top",content:"MyMarker"}};return new AMap.Marker(options)},getPolyline:function getPolyline(_,lnglat,map,AMap){var options={path:lnglat,map:map};return new AMap.Polyline(options)},getPolygon:function getPolygon(_,lnglat,map,AMap){var polygon=new AMap.Polygon;return polygon.setPath(lnglat),polygon.setOptions({strokeColor:"yellow"}),polygon.setMap(map),polygon}},WithGeoJSON.parameters=__assign({storySource:{source:"(args) => (\n  <>\n    <AMapGeoJSON {...args} />\n    <AMapAutoFitView />\n  </>\n)"}},WithGeoJSON.parameters),CustomOverlay.parameters=__assign({storySource:{source:"(args) => (\n  <>\n    <AMapGeoJSON {...args} />\n    <AMapAutoFitView />\n  </>\n)"}},CustomOverlay.parameters)}.call(this,__webpack_require__(50))},1136:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"ChangePosition",(function(){return ChangePosition})),__webpack_require__.d(__webpack_exports__,"ChangeStyle",(function(){return ChangeStyle})),__webpack_require__.d(__webpack_exports__,"ChangeTheme",(function(){return ChangeTheme})),__webpack_require__.d(__webpack_exports__,"NotAutoMove",(function(){return NotAutoMove}));__webpack_require__(3),__webpack_require__(91);var react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(69),index__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(29),_AMapMap_stories_AMapMap_stories__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(62),__assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},eventHandler=Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.actions)("onShow","onHide","onOpen","onClose");__webpack_exports__.default={title:"Components/Control/AMapHawkEye",component:index__WEBPACK_IMPORTED_MODULE_4__.c,decorators:[_AMapMap_stories_AMapMap_stories__WEBPACK_IMPORTED_MODULE_5__.withAMapContainer],args:{autoMove:!0,showRectangle:!0,showButton:!0,visible:!0,onShow:eventHandler.onShow,onHide:eventHandler.onHide},argTypes:{offset:{description:"相对于地图容器偏移量，正数代表地图中心，复数向地图外侧(实际现象与高德地图官方文档不一致)。",control:{type:"object"}},autoMove:{description:"是否随主图视口变化移动",control:{type:"boolean"}},showRectangle:{description:"是否显示视口矩形",control:{type:"boolean"}},showButton:{description:"是否显示打开关闭的按钮",control:{type:"boolean"}},isOpen:{description:"默认是否展开",control:{type:"boolean"}},mapStyle:{description:'缩略图要显示的地图自定义样式，如 "amap://styles/dark"',control:{type:"text"}},width:{description:'缩略图的宽度，同CSS，如 "200px"',control:{type:"text",description:'缩略图的宽度，同CSS，如 "200px"'}},height:{description:'缩略图的高度，同CSS，如"200px"',control:{type:"text"}},borderStyle:{description:'缩略图的边框样式，同CSS，如 "double solid solid double"',control:{type:"text"}},borderColor:{description:'缩略图的高度，同CSS，如 "silver"',control:{type:"color"}},borderRadius:{description:'缩略图的高度，同CSS，如 "5px"',control:{type:"text"}},borderWidth:{description:'缩略图的高度，同CSS，如 "5px"',control:{type:"text"}},buttonSize:{description:'箭头按钮的像素尺寸，同CSS，如 "12px"',control:{type:"text"}},visible:{description:"显示或隐藏",control:{type:"boolean"}}}};var Template=function Template(args){return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(index__WEBPACK_IMPORTED_MODULE_4__.c,__assign({},args))},ChangePosition=Template.bind({});ChangePosition.args={offset:[10,10]};var ChangeStyle=Template.bind({});ChangeStyle.args={height:"200px",width:"100px",borderStyle:"dashed",borderColor:"red",borderRadius:"4px",borderWidth:"5px",buttonSize:"10px"};var ChangeTheme=Template.bind({});ChangeTheme.args={mapStyle:"amap://styles/dark"};var NotAutoMove=Template.bind({});ChangeTheme.args={autoMove:!1},ChangePosition.parameters=__assign({storySource:{source:"(args) => <AMapHawkEye {...args} />"}},ChangePosition.parameters),ChangeStyle.parameters=__assign({storySource:{source:"(args) => <AMapHawkEye {...args} />"}},ChangeStyle.parameters),ChangeTheme.parameters=__assign({storySource:{source:"(args) => <AMapHawkEye {...args} />"}},ChangeTheme.parameters),NotAutoMove.parameters=__assign({storySource:{source:"(args) => <AMapHawkEye {...args} />"}},NotAutoMove.parameters)},1137:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"CommonUse",(function(){return CommonUse}));__webpack_require__(3),__webpack_require__(91);var react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(69),index__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(29),_AMapMap_stories_AMapMap_stories__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(62),__assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},eventHandler=Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.actions)("onCompleted");__webpack_exports__.default={title:"Components/Tools/AMapMouseTool",decorators:[_AMapMap_stories_AMapMap_stories__WEBPACK_IMPORTED_MODULE_5__.withAMapContainer],args:{type:"polygon",options:{strokeColor:"red",strokeWeight:4},onCompleted:eventHandler.onCompleted},argTypes:{type:{description:"工具类型",type:{required:!0,summary:"string "},control:{type:"select",options:["marker","circle","rectangle","polyline","polygon","measureArea","rule","rectZoomIn","rectZoomOut"]}},options:{description:"额外参数",type:{summary:"object"}},onCompleted:{description:"鼠标工具绘制覆盖物结束时触发此事件，obj对象为绘制出来的覆盖物对象",type:{summary:'(event: AMap.Event<"draw">) => void'}}}};var CommonUse=function Template(args){return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(index__WEBPACK_IMPORTED_MODULE_4__.e,__assign({},args))}.bind({});CommonUse.args={type:"polygon",options:{strokeColor:"red",strokeWeight:4},onCompleted:eventHandler.onCompleted},CommonUse.parameters=__assign({storySource:{source:"(args) => (\n  <AMapMouseTool {...args} />\n)"}},CommonUse.parameters)},1138:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"ChangeOffset",(function(){return ChangeOffset})),__webpack_require__.d(__webpack_exports__,"ChangePosition",(function(){return ChangePosition}));__webpack_require__(3),__webpack_require__(91);var react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(69),index__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(29),_AMapMap_stories_AMapMap_stories__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(62),__assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},eventHandler=Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.actions)("onShow","onHide");__webpack_exports__.default={title:"Components/Control/AMapScale",component:index__WEBPACK_IMPORTED_MODULE_4__.f,decorators:[_AMapMap_stories_AMapMap_stories__WEBPACK_IMPORTED_MODULE_5__.withAMapContainer],args:{position:"LB",offset:[0,0],visible:!0,onShow:eventHandler.onShow,onHide:eventHandler.onHide},argTypes:{position:{description:"控件停靠位置",table:{type:{summary:"string|object"},defaultValue:{summary:"LB"}},control:{type:"select",options:["LT","RT","LB","RB"]}},offset:{description:"相对于地图容器偏移量，正数代表地图中心，复数向地图外侧(实际现象与高德地图官方文档不一致)。",type:{summary:"array",required:!1},control:"array"},visible:{description:"显示或隐藏",control:"boolean"},onShow:{description:"显示时触发此事件"},onHide:{description:"隐藏时触发此事件"}}};var Template=function Template(args){return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(index__WEBPACK_IMPORTED_MODULE_4__.f,__assign({},args))},ChangeOffset=Template.bind({});ChangeOffset.args={offset:[10,10]};var ChangePosition=Template.bind({});ChangePosition.args={position:"LT"},ChangeOffset.parameters=__assign({storySource:{source:"(args) => <AMapScale {...args} />"}},ChangeOffset.parameters),ChangePosition.parameters=__assign({storySource:{source:"(args) => <AMapScale {...args} />"}},ChangePosition.parameters)},1139:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"ChangeOffset",(function(){return ChangeOffset})),__webpack_require__.d(__webpack_exports__,"ChangePosition",(function(){return ChangePosition}));__webpack_require__(3),__webpack_require__(91);var react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(69),index__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(29),_AMapMap_stories_AMapMap_stories__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(62),__assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},eventHandler=Object(_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_3__.actions)("onShow","onHide");__webpack_exports__.default={title:"Components/Control/AMapToolBar",component:index__WEBPACK_IMPORTED_MODULE_4__.g,decorators:[_AMapMap_stories_AMapMap_stories__WEBPACK_IMPORTED_MODULE_5__.withAMapContainer],args:{position:"LT",offset:[0,0],showControlButton:!0,visible:!0,onShow:eventHandler.onShow,onHide:eventHandler.onHide},argTypes:{position:{description:"控件停靠位置",table:{type:{summary:"string|object"},defaultValue:{summary:"LT"}},control:{type:"select",options:["LT","RT","LB","RB"]}},offset:{description:"相对于地图容器偏移量，正数代表地图中心，复数向地图外侧(实际现象与高德地图官方文档不一致)。",type:{summary:"array",required:!1},control:"array"},showControlButton:{description:"是否显示倾斜、旋转按钮。",table:{type:{summary:"boolean"},defaultValue:{summary:!0}},control:"boolean"},visible:{description:"显示或隐藏",control:"boolean"},onShow:{description:"显示时触发此事件"},onHide:{description:"隐藏时触发此事件"}}};var Template=function Template(args){return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(index__WEBPACK_IMPORTED_MODULE_4__.g,__assign({},args))},ChangeOffset=Template.bind({});ChangeOffset.args={offset:[20,20]};var ChangePosition=Template.bind({});ChangePosition.args={position:"RT"},ChangeOffset.parameters=__assign({storySource:{source:"(args) => <AMapToolBar {...args} />"}},ChangeOffset.parameters),ChangePosition.parameters=__assign({storySource:{source:"(args) => <AMapToolBar {...args} />"}},ChangePosition.parameters)},134:function(module,__webpack_exports__,__webpack_require__){"use strict";var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_components_AMapAPIContainer__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(219);__webpack_exports__.a=function useAMapAPI(){return Object(react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_components_AMapAPIContainer__WEBPACK_IMPORTED_MODULE_1__.a)}},168:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"b",(function(){return AMapMap_AMapMapContext})),__webpack_require__.d(__webpack_exports__,"a",(function(){return AMapMap_AMapMap}));var react=__webpack_require__(0),react_default=__webpack_require__.n(react),AMapMap_AMapMapContext=react.createContext(null),useAMapAPI=__webpack_require__(134),CONTAINER_STYLE={width:"100%",height:"100%"},defaultProps={center:void 0,cityName:void 0,zoom:void 0},AMapMap=Object(react.forwardRef)((function(_a,ref){var children=_a.children,center=_a.center,cityName=_a.cityName,zoom=_a.zoom,AMap=Object(useAMapAPI.a)().__AMAP__,$mapContainer=Object(react.useRef)(null),_b=Object(react.useState)(null),curMap=_b[0],setInstance=_b[1];return Object(react.useEffect)((function(){var clearEffect;if(!$mapContainer.current||!AMap)return clearEffect;return function initMap(){var newInstance=new AMap.Map($mapContainer.current);clearEffect=function clearEffect(){newInstance.destroy()},setInstance(newInstance)}(),clearEffect}),[AMap]),Object(react.useImperativeHandle)(ref,(function(){return curMap}),[curMap]),Object(react.useEffect)((function(){var _a;cityName&&(null===(_a=null==curMap?void 0:curMap.setCity)||void 0===_a||_a.call(curMap,cityName,(function(){})))}),[cityName,curMap]),Object(react.useEffect)((function(){zoom&&(null==curMap||curMap.setZoom(zoom))}),[zoom,curMap]),Object(react.useEffect)((function(){var _a;center&&(null===(_a=null==curMap?void 0:curMap.setCenter)||void 0===_a||_a.call(curMap,center))}),[center,curMap]),react_default.a.createElement("div",{style:CONTAINER_STYLE,ref:$mapContainer},react_default.a.createElement(AMapMap_AMapMapContext.Provider,{value:curMap},children))}));AMapMap.defaultProps=defaultProps;var AMapMap_AMapMap=Object(react.memo)(AMapMap);try{AMapMap.displayName="AMapMap",AMapMap.__docgenInfo={description:"",displayName:"AMapMap",props:{center:{defaultValue:{value:"undefined"},description:"",name:"center",required:!1,type:{name:"[number, number]"}},cityName:{defaultValue:{value:"undefined"},description:"",name:"cityName",required:!1,type:{name:"string"}},zoom:{defaultValue:{value:"undefined"},description:"",name:"zoom",required:!1,type:{name:"number"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<any>"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"ReactText"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AMapMap/AMapMap.tsx#AMapMap"]={docgenInfo:AMapMap.__docgenInfo,name:"AMapMap",path:"src/components/AMapMap/AMapMap.tsx#AMapMap"})}catch(__react_docgen_typescript_loader_error){}try{AMapMap.displayName="AMapMap",AMapMap.__docgenInfo={description:"",displayName:"AMapMap",props:{center:{defaultValue:{value:"undefined"},description:"",name:"center",required:!1,type:{name:"[number, number]"}},cityName:{defaultValue:{value:"undefined"},description:"",name:"cityName",required:!1,type:{name:"string"}},zoom:{defaultValue:{value:"undefined"},description:"",name:"zoom",required:!1,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AMapMap/AMapMap.tsx#AMapMap"]={docgenInfo:AMapMap.__docgenInfo,name:"AMapMap",path:"src/components/AMapMap/AMapMap.tsx#AMapMap"})}catch(__react_docgen_typescript_loader_error){}},219:function(module,__webpack_exports__,__webpack_require__){"use strict";var _AMapAPIContext__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(220);__webpack_require__.d(__webpack_exports__,"a",(function(){return _AMapAPIContext__WEBPACK_IMPORTED_MODULE_0__.a}));var _createAMapAPIContainer__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(501);__webpack_require__.d(__webpack_exports__,"b",(function(){return _createAMapAPIContainer__WEBPACK_IMPORTED_MODULE_1__.a}))},220:function(module,__webpack_exports__,__webpack_require__){"use strict";var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),defaultContext={__AMAP__:null,__AMAP_UI__:null},AMapAPIContext=Object(react__WEBPACK_IMPORTED_MODULE_0__.createContext)(defaultContext);__webpack_exports__.a=AMapAPIContext},225:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"AsyncPluginAPIContainer",(function(){return AsyncPluginAPIContainer})),__webpack_require__.d(__webpack_exports__,"AsyncPlugin",(function(){return AsyncPlugin})),__webpack_require__.d(__webpack_exports__,"SyncPlugin",(function(){return SyncPlugin}));__webpack_require__(3),__webpack_require__(13),__webpack_require__(9),__webpack_require__(19),__webpack_require__(22);var react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__),index__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(29),__assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},AMAP_API_KEY=Object({NODE_ENV:"production",NODE_PATH:"",STORYBOOK:"true",PUBLIC_URL:"."}).STORYBOOK_AMAP_API_KEY||"";__webpack_exports__.default={title:"Components/Basic/AMapAPIContainer",excludeStories:["AsyncPluginAPIContainer"]};var SyncPluginAPIContainer=Object(index__WEBPACK_IMPORTED_MODULE_6__.h)({key:AMAP_API_KEY,version:"2.0",plugins:["ControlBar","ToolBar","Scale","MapType","HawkEye"].map((function(pluginName){return"AMap."+pluginName})),AMapUI:{version:"1.1",plugins:["overlay/SimpleMarker"]}}),AsyncPluginAPIContainer=Object(index__WEBPACK_IMPORTED_MODULE_6__.h)({key:AMAP_API_KEY,version:"2.0",AMapUI:{version:"1.1"}}),initPlugin=function initPlugin(AMap,map){(new AMap.ControlBar).addTo(map),new AMap.ToolBar({position:"LT",offset:[50,120]}).addTo(map),(new AMap.Scale).addTo(map),(new AMap.HawkEye).addTo(map)},initUIPlugin=function initUIPlugin(SimpleMarker,map){new SimpleMarker({iconTheme:"numv1",iconStyle:"start",position:[116.405285,39.904989]}).addTo(map)},AsyncPluginContentDrawer=function AsyncPluginContentDrawer(){var AMap=Object(index__WEBPACK_IMPORTED_MODULE_6__.i)().__AMAP__,$container=Object(react__WEBPACK_IMPORTED_MODULE_5__.useRef)(null),$map=Object(react__WEBPACK_IMPORTED_MODULE_5__.useRef)(null);return Object(react__WEBPACK_IMPORTED_MODULE_5__.useEffect)((function(){var clearEffect;if(!AMap||!$container.current)return clearEffect;var map=new AMap.Map($container.current);return $map.current=map,AMap.plugin(["ControlBar","ToolBar","Scale","MapType","HawkEye"].map((function(pluginName){return"AMap."+pluginName})),(function(){return initPlugin(AMap,map)})),AMapUI.loadUI("overlay/SimpleMarker",(function(SimpleMarker){initUIPlugin(SimpleMarker,map)})),clearEffect=function clearEffect(){map.destroy()}}),[AMap]),react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("div",{ref:$container,style:{height:400}})},AsyncPlugin=function AsyncPlugin(){return react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_5__.Suspense,{fallback:"loading..."},react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(AsyncPluginAPIContainer,null,react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(AsyncPluginContentDrawer,null)))},AsyncPluginCode="\nconst AsyncPluginAPIContainer = createAMapAPIContainer({\n  key: AMAP_API_KEY,\n  version: '2.0',\n  AMapUI: {\n    version: '1.1',\n  },\n});\n\n"+initPlugin.toString()+"\n\n"+initUIPlugin.toString()+"\n\nconst AsyncPluginContentDrawer = () => {\n  const { __AMAP__: AMap } = useAMapAPI();\n  const $container = useRef(null);\n  const $map = useRef<AMap.Map | null>(null);\n  useEffect(() => {\n    let clearEffect;\n    if (!AMap || !$container.current) {\n      return clearEffect;\n    }\n\n    const map = new AMap.Map($container.current);\n    $map.current = map;\n\n    AMap.plugin(\n      ['ControlBar', 'ToolBar', 'Scale', 'MapType', 'HawkEye'].map(\n        (pluginName) => `AMap.${pluginName}`,\n      ),\n      () => initPlugin(AMap, map),\n    );\n\n    AMapUI.loadUI('overlay/SimpleMarker', (SimpleMarker: typeof AMapUI.SimpleMarker) => {\n      initUIPlugin(SimpleMarker, map);\n    });\n\n    clearEffect = () => {\n      map.destroy();\n    };\n\n    return clearEffect;\n  }, [AMap]);\n\n  return <div ref={$container} style={{ height: 400 }} />;\n};\n";AsyncPlugin.parameters={docs:{source:{code:AsyncPluginCode}}};var SyncPluginContentDrawer=function SyncPluginContentDrawer(){var _a=Object(index__WEBPACK_IMPORTED_MODULE_6__.i)(),AMap=_a.__AMAP__,AMapUI=_a.__AMAP_UI__,$container=Object(react__WEBPACK_IMPORTED_MODULE_5__.useRef)(null),$map=Object(react__WEBPACK_IMPORTED_MODULE_5__.useRef)(null);return Object(react__WEBPACK_IMPORTED_MODULE_5__.useEffect)((function(){var clearEffect;if(!AMap||!$container.current)return clearEffect;var map=new AMap.Map($container.current);return $map.current=map,initPlugin(AMap,map),initUIPlugin(AMapUI.SimpleMarker,map),clearEffect=function clearEffect(){map.destroy()}}),[AMap,AMapUI]),react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement("div",{ref:$container,style:{height:400}})},SyncPlugin=function SyncPlugin(){return react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_5__.Suspense,{fallback:"loading..."},react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(SyncPluginAPIContainer,null,react__WEBPACK_IMPORTED_MODULE_5___default.a.createElement(SyncPluginContentDrawer,null)))},SyncPluginCode="\nconst SyncPluginAPIContainer = createAMapAPIContainer({\n  version: '2.0',\n  apiKey: AMAP_API_KEY,\n  plugins: ['ControlBar', 'ToolBar', 'Scale', 'MapType', 'HawkEye'].map(\n    (pluginName) => `AMap.${pluginName}`,\n  ),\n  AMapUI: {\n    version: '1.1',\n    plugins: ['overlay/SimpleMarker'],\n  },\n});\n\n"+initPlugin.toString()+"\n\n"+initUIPlugin.toString()+"\n\nconst SyncPluginContentDrawer = () => {\n  const { __AMAP__: AMap, __AMAP_UI__: AMapUI } = useAMapAPI();\n  const $container = useRef(null);\n  const $map = useRef<AMap.Map | null>(null);\n  useEffect(() => {\n    let clearEffect;\n    if (!AMap || !$container.current) {\n      return clearEffect;\n    }\n\n    const map = new AMap.Map($container.current);\n    $map.current = map;\n\n    initPlugin(AMap, map);\n    initUIPlugin(AMapUI!.SimpleMarker, map);\n\n    clearEffect = () => {\n      map.destroy();\n    };\n\n    return clearEffect;\n  }, [AMap, AMapUI]);\n  return <div ref={$container} style={{ height: 400 }} />;\n};\n\n() => (\n  <SyncPluginAPIContainer>\n    <SyncPluginContentDrawer />\n  </SyncPluginAPIContainer>\n)\n";SyncPlugin.parameters={docs:{source:{code:SyncPluginCode}}},AsyncPluginAPIContainer.parameters=__assign({storySource:{source:"createAMapAPIContainer({\n  key: AMAP_API_KEY,\n  version: '2.0',\n  AMapUI: {\n    version: '1.1',\n  },\n})"}},AsyncPluginAPIContainer.parameters),AsyncPlugin.parameters=__assign({storySource:{source:'() => (\n  <Suspense fallback="loading...">\n    <AsyncPluginAPIContainer>\n      <AsyncPluginContentDrawer />\n    </AsyncPluginAPIContainer>\n  </Suspense>\n)'}},AsyncPlugin.parameters),SyncPlugin.parameters=__assign({storySource:{source:'() => (\n  <Suspense fallback="loading...">\n    <SyncPluginAPIContainer>\n      <SyncPluginContentDrawer />\n    </SyncPluginAPIContainer>\n  </Suspense>\n)'}},SyncPlugin.parameters);try{AsyncPluginAPIContainer.displayName="AsyncPluginAPIContainer",AsyncPluginAPIContainer.__docgenInfo={description:"",displayName:"AsyncPluginAPIContainer",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AMapAPIContainer/stories/createAMapAPIContainer.stories.tsx#AsyncPluginAPIContainer"]={docgenInfo:AsyncPluginAPIContainer.__docgenInfo,name:"AsyncPluginAPIContainer",path:"src/components/AMapAPIContainer/stories/createAMapAPIContainer.stories.tsx#AsyncPluginAPIContainer"})}catch(__react_docgen_typescript_loader_error){}},29:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"i",(function(){return useAMapAPI.a})),__webpack_require__.d(__webpack_exports__,"h",(function(){return AMapAPIContainer.b})),__webpack_require__.d(__webpack_exports__,"d",(function(){return AMapMap.a})),__webpack_require__.d(__webpack_exports__,"a",(function(){return components_AMapControlBar_AMapControlBar})),__webpack_require__.d(__webpack_exports__,"c",(function(){return components_AMapHawkEye_AMapHawkEye})),__webpack_require__.d(__webpack_exports__,"f",(function(){return components_AMapScale_AMapScale})),__webpack_require__.d(__webpack_exports__,"g",(function(){return components_AMapToolBar_AMapToolBar})),__webpack_require__.d(__webpack_exports__,"b",(function(){return components_AMapGeoJSON_AMapGeoJSON})),__webpack_require__.d(__webpack_exports__,"e",(function(){return AMapMouseTool.default}));var useAMapAPI=__webpack_require__(134),useAMap=__webpack_require__(43),react=(__webpack_require__(13),__webpack_require__(0)),useAMapContainerBinder_useAMapContainerBinder=function useAMapContainerBinder(curInstance){var map=Object(useAMap.a)().map;Object(react.useEffect)((function(){var clearEffect;return curInstance&&map?(clearEffect=function clearEffect(){try{map.remove(curInstance)}catch(error){}},map.add(curInstance),clearEffect):clearEffect}),[curInstance,map])},hooks_useAMapContainerBinder=useAMapContainerBinder_useAMapContainerBinder;try{useAMapContainerBinder_useAMapContainerBinder.displayName="useAMapContainerBinder",useAMapContainerBinder_useAMapContainerBinder.__docgenInfo={description:"",displayName:"useAMapContainerBinder",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/hooks/useAMapContainerBinder.ts#useAMapContainerBinder"]={docgenInfo:useAMapContainerBinder_useAMapContainerBinder.__docgenInfo,name:"useAMapContainerBinder",path:"src/hooks/useAMapContainerBinder.ts#useAMapContainerBinder"})}catch(__react_docgen_typescript_loader_error){}var AMapAPIContainer=__webpack_require__(219),AMapMap=__webpack_require__(168),useAMapControlBinder_useAMapControlBinder=function useAMapControlBinder(controlInstance){var map=Object(useAMap.a)().map;Object(react.useEffect)((function(){var clearEffect;return controlInstance&&map?(clearEffect=function clearEffect(){map.removeControl(controlInstance)},map.addControl(controlInstance),clearEffect):clearEffect}),[map,controlInstance])},hooks_useAMapControlBinder=useAMapControlBinder_useAMapControlBinder;try{useAMapControlBinder_useAMapControlBinder.displayName="useAMapControlBinder",useAMapControlBinder_useAMapControlBinder.__docgenInfo={description:"",displayName:"useAMapControlBinder",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/hooks/useAMapControlBinder.ts#useAMapControlBinder"]={docgenInfo:useAMapControlBinder_useAMapControlBinder.__docgenInfo,name:"useAMapControlBinder",path:"src/hooks/useAMapControlBinder.ts#useAMapControlBinder"})}catch(__react_docgen_typescript_loader_error){}var useAMapEventBinder=__webpack_require__(57),AMapControlBar_AMapControlBar=function AMapControlBar(_a){var position=_a.position,offset=_a.offset,showControlButton=_a.showControlButton,visible=_a.visible,onHide=_a.onHide,onShow=_a.onShow,AMap=Object(useAMap.a)().__AMAP__,_b=Object(react.useState)(null),curInstance=_b[0],setInstance=_b[1],initConfig=Object(react.useMemo)((function(){var conf={position:position};return void 0!==showControlButton&&(conf.showControlButton=showControlButton),void 0!==offset&&(conf.offset=offset),conf}),[showControlButton,position,offset]);return Object(react.useEffect)((function(){if(AMap){var initInstance=function initInstance(){var newInstance=new AMap.ControlBar(initConfig);setInstance(newInstance)};AMap.ControlBar?initInstance():AMap.plugin("AMap.ControlBar",initInstance)}}),[AMap,initConfig]),Object(react.useEffect)((function(){var _a,_b;visible?null===(_a=null==curInstance?void 0:curInstance.show)||void 0===_a||_a.call(curInstance):null===(_b=null==curInstance?void 0:curInstance.hide)||void 0===_b||_b.call(curInstance)}),[curInstance,visible]),Object(useAMapEventBinder.a)(curInstance,"show",onShow),Object(useAMapEventBinder.a)(curInstance,"hide",onHide),hooks_useAMapControlBinder(curInstance),null};AMapControlBar_AMapControlBar.defaultProps={position:"LT",showControlButton:!0,visible:!0,onShow:void 0,onHide:void 0};var components_AMapControlBar_AMapControlBar=Object(react.memo)(AMapControlBar_AMapControlBar);try{AMapControlBar_AMapControlBar.displayName="AMapControlBar",AMapControlBar_AMapControlBar.__docgenInfo={description:"",displayName:"AMapControlBar",props:{offset:{defaultValue:null,description:"",name:"offset",required:!1,type:{name:"[number, number]"}},position:{defaultValue:{value:"'LT' as AMapControlBarProps['position']"},description:"",name:"position",required:!1,type:{name:'{ top?: string; left?: string; right?: string; bottom?: string; } | "LT" | "RT" | "LB" | "RB"'}},showControlButton:{defaultValue:{value:!0},description:"",name:"showControlButton",required:!1,type:{name:"boolean"}},visible:{defaultValue:{value:!0},description:"",name:"visible",required:!1,type:{name:"boolean"}},onShow:{defaultValue:{value:"undefined"},description:"",name:"onShow",required:!1,type:{name:"(event: any) => void"}},onHide:{defaultValue:{value:"undefined"},description:"",name:"onHide",required:!1,type:{name:"(event: any) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AMapControlBar/AMapControlBar.tsx#AMapControlBar"]={docgenInfo:AMapControlBar_AMapControlBar.__docgenInfo,name:"AMapControlBar",path:"src/components/AMapControlBar/AMapControlBar.tsx#AMapControlBar"})}catch(__react_docgen_typescript_loader_error){}try{AMapControlBar_AMapControlBar.displayName="AMapControlBar",AMapControlBar_AMapControlBar.__docgenInfo={description:"",displayName:"AMapControlBar",props:{offset:{defaultValue:null,description:"",name:"offset",required:!0,type:{name:"any"}},position:{defaultValue:{value:"'LT' as AMapControlBarProps['position']"},description:"",name:"position",required:!1,type:{name:"any"}},showControlButton:{defaultValue:{value:!0},description:"",name:"showControlButton",required:!1,type:{name:"boolean"}},visible:{defaultValue:{value:!0},description:"",name:"visible",required:!1,type:{name:"boolean"}},onShow:{defaultValue:{value:"undefined"},description:"",name:"onShow",required:!1,type:{name:"((event: any) => void)"}},onHide:{defaultValue:{value:"undefined"},description:"",name:"onHide",required:!1,type:{name:"((event: any) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AMapControlBar/AMapControlBar.tsx#AMapControlBar"]={docgenInfo:AMapControlBar_AMapControlBar.__docgenInfo,name:"AMapControlBar",path:"src/components/AMapControlBar/AMapControlBar.tsx#AMapControlBar"})}catch(__react_docgen_typescript_loader_error){}var AMapHawkEye_AMapHawkEye=function AMapHawkEye(_a){var autoMove=_a.autoMove,showRectangle=_a.showRectangle,showButton=_a.showButton,isOpen=_a.isOpen,mapStyle=_a.mapStyle,width=_a.width,height=_a.height,offset=_a.offset,borderStyle=_a.borderStyle,borderColor=_a.borderColor,borderRadius=_a.borderRadius,borderWidth=_a.borderWidth,buttonSize=_a.buttonSize,visible=_a.visible,onShow=_a.onShow,onHide=_a.onHide,AMap=Object(useAMap.a)().__AMAP__,_b=Object(react.useState)(null),curInstance=_b[0],setInstance=_b[1],initConfig=Object(react.useMemo)((function(){var conf={};return void 0!==autoMove&&(conf.autoMove=autoMove),void 0!==showRectangle&&(conf.showRectangle=showRectangle),void 0!==showButton&&(conf.showButton=showButton),void 0!==mapStyle&&(conf.mapStyle=mapStyle),void 0!==width&&(conf.width=width),void 0!==height&&(conf.height=height),void 0!==offset&&(conf.offset=offset),void 0!==borderStyle&&(conf.borderStyle=borderStyle),void 0!==borderColor&&(conf.borderColor=borderColor),void 0!==borderRadius&&(conf.borderRadius=borderRadius),void 0!==borderWidth&&(conf.borderWidth=borderWidth),void 0!==buttonSize&&(conf.buttonSize=buttonSize),conf}),[autoMove,showRectangle,showButton,mapStyle,width,height,offset,borderStyle,borderColor,borderRadius,borderWidth,buttonSize]);return Object(react.useEffect)((function(){if(AMap){var initInstance=function initInstance(){var newInstance=new AMap.HawkEye(initConfig);setInstance(newInstance)};AMap.HawkEye?initInstance():AMap.plugin("AMap.HawkEye",initInstance)}}),[AMap,initConfig]),Object(react.useEffect)((function(){var _a,_b;isOpen?null===(_a=null==curInstance?void 0:curInstance.open)||void 0===_a||_a.call(curInstance):null===(_b=null==curInstance?void 0:curInstance.close)||void 0===_b||_b.call(curInstance)}),[curInstance,isOpen]),Object(react.useEffect)((function(){var _a,_b;visible?null===(_a=null==curInstance?void 0:curInstance.show)||void 0===_a||_a.call(curInstance):null===(_b=null==curInstance?void 0:curInstance.hide)||void 0===_b||_b.call(curInstance)}),[curInstance,visible]),Object(useAMapEventBinder.a)(curInstance,"show",onShow),Object(useAMapEventBinder.a)(curInstance,"hide",onHide),hooks_useAMapControlBinder(curInstance),null};AMapHawkEye_AMapHawkEye.defaultProps={showButton:!0,isOpen:!0,visible:!0,onShow:void 0,onHide:void 0};var components_AMapHawkEye_AMapHawkEye=Object(react.memo)(AMapHawkEye_AMapHawkEye);try{AMapHawkEye_AMapHawkEye.displayName="AMapHawkEye",AMapHawkEye_AMapHawkEye.__docgenInfo={description:"",displayName:"AMapHawkEye",props:{autoMove:{defaultValue:null,description:"",name:"autoMove",required:!1,type:{name:"boolean"}},showRectangle:{defaultValue:null,description:"",name:"showRectangle",required:!1,type:{name:"boolean"}},showButton:{defaultValue:{value:!0},description:"",name:"showButton",required:!1,type:{name:"boolean"}},isOpen:{defaultValue:{value:!0},description:"",name:"isOpen",required:!1,type:{name:"boolean"}},mapStyle:{defaultValue:null,description:"",name:"mapStyle",required:!1,type:{name:"string"}},width:{defaultValue:null,description:"",name:"width",required:!1,type:{name:"string"}},height:{defaultValue:null,description:"",name:"height",required:!1,type:{name:"string"}},offset:{defaultValue:null,description:"",name:"offset",required:!1,type:{name:"[number, number]"}},borderStyle:{defaultValue:null,description:"",name:"borderStyle",required:!1,type:{name:"string"}},borderColor:{defaultValue:null,description:"",name:"borderColor",required:!1,type:{name:"string"}},borderRadius:{defaultValue:null,description:"",name:"borderRadius",required:!1,type:{name:"string"}},borderWidth:{defaultValue:null,description:"",name:"borderWidth",required:!1,type:{name:"string"}},buttonSize:{defaultValue:null,description:"",name:"buttonSize",required:!1,type:{name:"string"}},visible:{defaultValue:{value:!0},description:"",name:"visible",required:!1,type:{name:"boolean"}},onShow:{defaultValue:{value:"undefined"},description:"",name:"onShow",required:!1,type:{name:"(event: any) => void"}},onHide:{defaultValue:{value:"undefined"},description:"",name:"onHide",required:!1,type:{name:"(event: any) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AMapHawkEye/AMapHawkEye.tsx#AMapHawkEye"]={docgenInfo:AMapHawkEye_AMapHawkEye.__docgenInfo,name:"AMapHawkEye",path:"src/components/AMapHawkEye/AMapHawkEye.tsx#AMapHawkEye"})}catch(__react_docgen_typescript_loader_error){}try{AMapHawkEye_AMapHawkEye.displayName="AMapHawkEye",AMapHawkEye_AMapHawkEye.__docgenInfo={description:"",displayName:"AMapHawkEye",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AMapHawkEye/AMapHawkEye.tsx#AMapHawkEye"]={docgenInfo:AMapHawkEye_AMapHawkEye.__docgenInfo,name:"AMapHawkEye",path:"src/components/AMapHawkEye/AMapHawkEye.tsx#AMapHawkEye"})}catch(__react_docgen_typescript_loader_error){}var AMapScale_AMapScale=function AMapScale(_a){var position=_a.position,offset=_a.offset,visible=_a.visible,onShow=_a.onShow,onHide=_a.onHide,AMap=Object(useAMap.a)().__AMAP__,_b=Object(react.useState)(null),curInstance=_b[0],setInstance=_b[1],initConfig=Object(react.useMemo)((function(){var conf={position:position};return void 0!==offset&&(conf.offset=offset),conf}),[position,offset]);return Object(react.useEffect)((function(){if(AMap){var initInstance=function initInstance(){var newInstance=new AMap.Scale(initConfig);setInstance(newInstance)};AMap.Scale?initInstance():AMap.plugin("AMap.Scale",initInstance)}}),[AMap,position,offset,initConfig]),Object(react.useEffect)((function(){var _a,_b;visible?null===(_a=null==curInstance?void 0:curInstance.show)||void 0===_a||_a.call(curInstance):null===(_b=null==curInstance?void 0:curInstance.hide)||void 0===_b||_b.call(curInstance)}),[curInstance,visible]),Object(useAMapEventBinder.a)(curInstance,"show",onShow),Object(useAMapEventBinder.a)(curInstance,"hide",onHide),hooks_useAMapControlBinder(curInstance),null};AMapScale_AMapScale.defaultProps={position:"LB",visible:!0,onShow:void 0,onHide:void 0};var components_AMapScale_AMapScale=Object(react.memo)(AMapScale_AMapScale);try{AMapScale_AMapScale.displayName="AMapScale",AMapScale_AMapScale.__docgenInfo={description:"",displayName:"AMapScale",props:{offset:{defaultValue:null,description:"",name:"offset",required:!1,type:{name:"[number, number]"}},position:{defaultValue:{value:"'LB' as AMapScaleProps['position']"},description:"",name:"position",required:!1,type:{name:'{ top?: string; left?: string; right?: string; bottom?: string; } | "LT" | "RT" | "LB" | "RB"'}},visible:{defaultValue:{value:!0},description:"",name:"visible",required:!1,type:{name:"boolean"}},onShow:{defaultValue:{value:"undefined"},description:"",name:"onShow",required:!1,type:{name:"(event: any) => void"}},onHide:{defaultValue:{value:"undefined"},description:"",name:"onHide",required:!1,type:{name:"(event: any) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AMapScale/AMapScale.tsx#AMapScale"]={docgenInfo:AMapScale_AMapScale.__docgenInfo,name:"AMapScale",path:"src/components/AMapScale/AMapScale.tsx#AMapScale"})}catch(__react_docgen_typescript_loader_error){}try{AMapScale_AMapScale.displayName="AMapScale",AMapScale_AMapScale.__docgenInfo={description:"",displayName:"AMapScale",props:{offset:{defaultValue:null,description:"",name:"offset",required:!0,type:{name:"any"}},position:{defaultValue:{value:"'LB' as AMapScaleProps['position']"},description:"",name:"position",required:!1,type:{name:"any"}},visible:{defaultValue:{value:!0},description:"",name:"visible",required:!1,type:{name:"boolean"}},onShow:{defaultValue:{value:"undefined"},description:"",name:"onShow",required:!1,type:{name:"((event: any) => void)"}},onHide:{defaultValue:{value:"undefined"},description:"",name:"onHide",required:!1,type:{name:"((event: any) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AMapScale/AMapScale.tsx#AMapScale"]={docgenInfo:AMapScale_AMapScale.__docgenInfo,name:"AMapScale",path:"src/components/AMapScale/AMapScale.tsx#AMapScale"})}catch(__react_docgen_typescript_loader_error){}var AMapToolBar_AMapToolBar=function AMapToolBar(_a){var position=_a.position,offset=_a.offset,visible=_a.visible,onShow=_a.onShow,onHide=_a.onHide,AMap=Object(useAMap.a)().__AMAP__,_b=Object(react.useState)(null),curInstance=_b[0],setInstance=_b[1],initConfig=Object(react.useMemo)((function(){var conf={position:position};return void 0!==offset&&(conf.offset=offset),conf}),[position,offset]);return Object(react.useEffect)((function(){if(AMap){var initInstance=function initInstance(){var newInstance=new AMap.ToolBar(initConfig);setInstance(newInstance)};AMap.ToolBar?initInstance():AMap.plugin("AMap.ToolBar",initInstance)}}),[AMap,position,offset,initConfig]),Object(react.useEffect)((function(){var _a,_b;visible?null===(_a=null==curInstance?void 0:curInstance.show)||void 0===_a||_a.call(curInstance):null===(_b=null==curInstance?void 0:curInstance.hide)||void 0===_b||_b.call(curInstance)}),[curInstance,visible]),Object(useAMapEventBinder.a)(curInstance,"show",onShow),Object(useAMapEventBinder.a)(curInstance,"hide",onHide),hooks_useAMapControlBinder(curInstance),null};AMapToolBar_AMapToolBar.defaultProps={position:"LT",visible:!0,onShow:void 0,onHide:void 0};var components_AMapToolBar_AMapToolBar=Object(react.memo)(AMapToolBar_AMapToolBar);try{AMapToolBar_AMapToolBar.displayName="AMapToolBar",AMapToolBar_AMapToolBar.__docgenInfo={description:"",displayName:"AMapToolBar",props:{offset:{defaultValue:null,description:"",name:"offset",required:!1,type:{name:"[number, number]"}},position:{defaultValue:{value:"'LT' as AMapToolBarProps['position']"},description:"",name:"position",required:!1,type:{name:'{ top?: string; left?: string; right?: string; bottom?: string; } | "LT" | "RT" | "LB" | "RB"'}},visible:{defaultValue:{value:!0},description:"",name:"visible",required:!1,type:{name:"boolean"}},onShow:{defaultValue:{value:"undefined"},description:"",name:"onShow",required:!1,type:{name:"(event: any) => void"}},onHide:{defaultValue:{value:"undefined"},description:"",name:"onHide",required:!1,type:{name:"(event: any) => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AMapToolBar/AMapToolBar.tsx#AMapToolBar"]={docgenInfo:AMapToolBar_AMapToolBar.__docgenInfo,name:"AMapToolBar",path:"src/components/AMapToolBar/AMapToolBar.tsx#AMapToolBar"})}catch(__react_docgen_typescript_loader_error){}try{AMapToolBar_AMapToolBar.displayName="AMapToolBar",AMapToolBar_AMapToolBar.__docgenInfo={description:"",displayName:"AMapToolBar",props:{offset:{defaultValue:null,description:"",name:"offset",required:!0,type:{name:"any"}},position:{defaultValue:{value:"'LT' as AMapToolBarProps['position']"},description:"",name:"position",required:!1,type:{name:"any"}},visible:{defaultValue:{value:!0},description:"",name:"visible",required:!1,type:{name:"boolean"}},onShow:{defaultValue:{value:"undefined"},description:"",name:"onShow",required:!1,type:{name:"((event: any) => void)"}},onHide:{defaultValue:{value:"undefined"},description:"",name:"onHide",required:!1,type:{name:"((event: any) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AMapToolBar/AMapToolBar.tsx#AMapToolBar"]={docgenInfo:AMapToolBar_AMapToolBar.__docgenInfo,name:"AMapToolBar",path:"src/components/AMapToolBar/AMapToolBar.tsx#AMapToolBar"})}catch(__react_docgen_typescript_loader_error){}var AMapGeoJSON_AMapGeoJSON=function AMapGeoJSON(_a){var geoJSON=_a.geoJSON,getPolyline=_a.getPolyline,getMarker=_a.getMarker,getPolygon=_a.getPolygon,options=_a.options,_b=Object(useAMap.a)(),AMap=_b.__AMAP__,map=_b.map,_c=Object(react.useState)(null),curInstance=_c[0],setInstance=_c[1],withMap=Object(react.useCallback)((function(fn){return"function"!=typeof fn?fn:function(geojson,lnglat){return fn(geojson,lnglat,map,AMap)}}),[AMap,map]);return Object(react.useEffect)((function(){if(AMap){var initInstance=function initInstance(){var newInstance=new AMap.GeoJSON({getMarker:withMap(getMarker),getPolygon:withMap(getPolygon),getPolyline:withMap(getPolyline)});setInstance(newInstance)};AMap.GeoJSON?initInstance():AMap.plugin("AMap.GeoJSON",initInstance)}}),[AMap,geoJSON,getPolyline,getMarker,getPolygon,withMap]),Object(react.useEffect)((function(){var _a;null===(_a=null==curInstance?void 0:curInstance.importData)||void 0===_a||_a.call(curInstance,geoJSON)}),[geoJSON,curInstance]),Object(react.useEffect)((function(){var _a;options&&(null===(_a=null==curInstance?void 0:curInstance.setOptions)||void 0===_a||_a.call(curInstance,options))}),[options,curInstance]),hooks_useAMapContainerBinder(curInstance),null};AMapGeoJSON_AMapGeoJSON.defaultProps={getMarker:void 0,getPolygon:void 0,getPolyline:void 0,options:void 0};var components_AMapGeoJSON_AMapGeoJSON=AMapGeoJSON_AMapGeoJSON;try{AMapGeoJSON_AMapGeoJSON.displayName="AMapGeoJSON",AMapGeoJSON_AMapGeoJSON.__docgenInfo={description:"",displayName:"AMapGeoJSON",props:{geoJSON:{defaultValue:null,description:"",name:"geoJSON",required:!1,type:{name:"any"}},getMarker:{defaultValue:{value:"undefined"},description:"",name:"getMarker",required:!1,type:{name:"GeoJSONGetOverlayCallBack & AMapGeoJSONGetOverlayCallback"}},getPolyline:{defaultValue:{value:"undefined"},description:"",name:"getPolyline",required:!1,type:{name:"GeoJSONGetOverlayCallBack & AMapGeoJSONGetOverlayCallback"}},getPolygon:{defaultValue:{value:"undefined"},description:"",name:"getPolygon",required:!1,type:{name:"GeoJSONGetOverlayCallBack & AMapGeoJSONGetOverlayCallback"}},options:{defaultValue:{value:"undefined"},description:"",name:"options",required:!1,type:{name:"{ [k: string]: any; }"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AMapGeoJSON/AMapGeoJSON.tsx#AMapGeoJSON"]={docgenInfo:AMapGeoJSON_AMapGeoJSON.__docgenInfo,name:"AMapGeoJSON",path:"src/components/AMapGeoJSON/AMapGeoJSON.tsx#AMapGeoJSON"})}catch(__react_docgen_typescript_loader_error){}try{AMapGeoJSON_AMapGeoJSON.displayName="AMapGeoJSON",AMapGeoJSON_AMapGeoJSON.__docgenInfo={description:"",displayName:"AMapGeoJSON",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AMapGeoJSON/AMapGeoJSON.tsx#AMapGeoJSON"]={docgenInfo:AMapGeoJSON_AMapGeoJSON.__docgenInfo,name:"AMapGeoJSON",path:"src/components/AMapGeoJSON/AMapGeoJSON.tsx#AMapGeoJSON"})}catch(__react_docgen_typescript_loader_error){}var AMapMouseTool=__webpack_require__(502);try{useAMapContainerBinder.displayName="useAMapContainerBinder",useAMapContainerBinder.__docgenInfo={description:"",displayName:"useAMapContainerBinder",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/index.ts#useAMapContainerBinder"]={docgenInfo:useAMapContainerBinder.__docgenInfo,name:"useAMapContainerBinder",path:"src/index.ts#useAMapContainerBinder"})}catch(__react_docgen_typescript_loader_error){}},43:function(module,__webpack_exports__,__webpack_require__){"use strict";var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),_components_AMapMap__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(168),_useAMapAPI__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(134);__webpack_exports__.a=function useAMap(){var _a=Object(_useAMapAPI__WEBPACK_IMPORTED_MODULE_2__.a)();return{__AMAP__:_a.__AMAP__,__AMAP_UI__:_a.__AMAP_UI__,map:Object(react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_components_AMapMap__WEBPACK_IMPORTED_MODULE_1__.b)}}},501:function(module,__webpack_exports__,__webpack_require__){"use strict";(function(global){__webpack_require__.d(__webpack_exports__,"a",(function(){return createAMapAPIContainer}));__webpack_require__(3),__webpack_require__(110),__webpack_require__(9),__webpack_require__(4),__webpack_require__(10),__webpack_require__(21),__webpack_require__(15),__webpack_require__(14),__webpack_require__(18),__webpack_require__(16);var react__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_10___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_10__),_amap_amap_jsapi_loader__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__(513),_amap_amap_jsapi_loader__WEBPACK_IMPORTED_MODULE_11___default=__webpack_require__.n(_amap_amap_jsapi_loader__WEBPACK_IMPORTED_MODULE_11__),_AMapAPIContext__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__(220),__assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)},__awaiter=function(thisArg,_arguments,P,generator){return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))},__generator=function(thisArg,body){var f,y,t,g,_={label:0,sent:function sent(){if(1&t[0])throw t[1];return t[1]},trys:[],ops:[]};return g={next:verb(0),throw:verb(1),return:verb(2)},"function"==typeof Symbol&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return function step(op){if(f)throw new TypeError("Generator is already executing.");for(;_;)try{if(f=1,y&&(t=2&op[0]?y.return:op[0]?y.throw||((t=y.return)&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;switch(y=0,t&&(op=[2&op[0],t.value]),op[0]){case 0:case 1:t=op;break;case 4:return _.label++,{value:op[1],done:!1};case 5:_.label++,y=op[1],op=[0];continue;case 7:op=_.ops.pop(),_.trys.pop();continue;default:if(!(t=_.trys,(t=t.length>0&&t[t.length-1])||6!==op[0]&&2!==op[0])){_=0;continue}if(3===op[0]&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(6===op[0]&&_.label<t[1]){_.label=t[1],t=op;break}if(t&&_.label<t[2]){_.label=t[2],_.ops.push(op);break}t[2]&&_.ops.pop(),_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e],y=0}finally{f=t=0}if(5&op[0])throw op[1];return{value:op[0]?op[1]:void 0,done:!0}}([n,v])}}},__rest=function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&e.indexOf(p)<0&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols){var i=0;for(p=Object.getOwnPropertySymbols(s);i<p.length;i++)e.indexOf(p[i])<0&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]])}return t},defaultOptions={version:"2.0"},createAMapAPIContainer=function createAMapAPIContainer(options){var _a=options||{},AMapUIOptions=_a.AMapUI,otherOptions=__rest(_a,["AMapUI"]),loadAMapAPI=function loadAMapAPI(){return _amap_amap_jsapi_loader__WEBPACK_IMPORTED_MODULE_11___default.a.load(__assign(__assign(__assign({},defaultOptions),otherOptions),{AMapUI:AMapUIOptions&&__assign({version:"1.1"},AMapUIOptions)}))},AMap=global.AMap,AMapUI=global.AMapUI;return Object(react__WEBPACK_IMPORTED_MODULE_10__.lazy)((function(){return __awaiter(void 0,void 0,void 0,(function(){var promises,_a,_b;return __generator(this,(function(_c){switch(_c.label){case 0:return AMap&&AMapUI?[3,2]:[4,loadAMapAPI()];case 1:return _c.sent(),AMap=global.AMap,AMapUI=global.AMapUI,[3,4];case 2:return promises=[],(null!==(_b=null===(_a=null==otherOptions?void 0:otherOptions.plugins)||void 0===_a?void 0:_a.length)&&void 0!==_b?_b:0)>0&&promises.push(new Promise((function(r){AMap.plugin(otherOptions.plugins,r)}))),[4,Promise.all(promises)];case 3:_c.sent(),_c.label=4;case 4:return[2,{default:function AMapAPIContainer(_a){var children=_a.children;return react__WEBPACK_IMPORTED_MODULE_10___default.a.createElement(_AMapAPIContext__WEBPACK_IMPORTED_MODULE_12__.a.Provider,{value:{__AMAP__:AMap,__AMAP_UI__:AMapUI}},children)}}]}}))}))}))};try{createAMapAPIContainer.displayName="createAMapAPIContainer",createAMapAPIContainer.__docgenInfo={description:"",displayName:"createAMapAPIContainer",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AMapAPIContainer/createAMapAPIContainer.tsx#createAMapAPIContainer"]={docgenInfo:createAMapAPIContainer.__docgenInfo,name:"createAMapAPIContainer",path:"src/components/AMapAPIContainer/createAMapAPIContainer.tsx#createAMapAPIContainer"})}catch(__react_docgen_typescript_loader_error){}try{createAMapAPIContainer.displayName="createAMapAPIContainer",createAMapAPIContainer.__docgenInfo={description:"",displayName:"createAMapAPIContainer",props:{key:{defaultValue:null,description:"",name:"key",required:!0,type:{name:"string"}},version:{defaultValue:null,description:"",name:"version",required:!0,type:{name:"string"}},plugins:{defaultValue:null,description:"",name:"plugins",required:!1,type:{name:"string[]"}},AMapUI:{defaultValue:null,description:"",name:"AMapUI",required:!1,type:{name:"{ version?: string; plugins?: string[] | undefined; } | undefined"}},Loca:{defaultValue:null,description:"",name:"Loca",required:!1,type:{name:"{ version?: string; } | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AMapAPIContainer/createAMapAPIContainer.tsx#createAMapAPIContainer"]={docgenInfo:createAMapAPIContainer.__docgenInfo,name:"createAMapAPIContainer",path:"src/components/AMapAPIContainer/createAMapAPIContainer.tsx#createAMapAPIContainer"})}catch(__react_docgen_typescript_loader_error){}}).call(this,__webpack_require__(50))},502:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__(503);var _AMapMouseTool__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(504);__webpack_require__.d(__webpack_exports__,"default",(function(){return _AMapMouseTool__WEBPACK_IMPORTED_MODULE_1__.a}))},503:function(module,exports){},504:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__(13);var react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),_hooks_useAMap__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(43),_hooks_useAMapEventBinder__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(57),AMapMouseTool=Object(react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(_a,ref){var type=_a.type,options=_a.options,onCompleted=_a.onCompleted,_b=Object(_hooks_useAMap__WEBPACK_IMPORTED_MODULE_2__.a)(),AMap=_b.__AMAP__,map=_b.map,_c=Object(react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),curInstance=_c[0],setInstance=_c[1];return Object(react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((function(){if(AMap&&map){var init=function init(){var instance=new AMap.MouseTool(map);setInstance(instance)};AMap.MouseTool?init():AMap.plugin(["AMap.MouseTool"],init)}}),[AMap,map]),Object(react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(ref,(function(){return curInstance}),[curInstance]),Object(_hooks_useAMapEventBinder__WEBPACK_IMPORTED_MODULE_3__.a)(curInstance,"draw",onCompleted),Object(react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((function(){var clearEffect;return curInstance?(clearEffect=function clearEffect(){return curInstance.close(!1)},curInstance[type](null!=options?options:{}),clearEffect):clearEffect}),[curInstance,options,type]),null}));AMapMouseTool.defaultProps={options:{},onCompleted:void 0},__webpack_exports__.a=AMapMouseTool;try{AMapMouseTool.displayName="AMapMouseTool",AMapMouseTool.__docgenInfo={description:"Origin Docs See:\nhttps://lbs.amap.com/api/javascript-api/reference/plugin#AMap.MouseTool",displayName:"AMapMouseTool",props:{type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:'"marker" | "circle" | "rectangle" | "polyline" | "polygon" | "measureArea" | "rule" | "rectZoomIn" | "rectZoomOut"'}},options:{defaultValue:{value:"{}"},description:"",name:"options",required:!1,type:{name:"MarkerOptions | PolylineOptions | PolygonOptions | RectangleOptions | CircleOptions"}},onCompleted:{defaultValue:{value:"undefined"},description:"",name:"onCompleted",required:!1,type:{name:"(e: any) => void"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<MouseTool>"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"ReactText"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AMapMouseTool/AMapMouseTool.tsx#AMapMouseTool"]={docgenInfo:AMapMouseTool.__docgenInfo,name:"AMapMouseTool",path:"src/components/AMapMouseTool/AMapMouseTool.tsx#AMapMouseTool"})}catch(__react_docgen_typescript_loader_error){}try{AMapMouseTool.displayName="AMapMouseTool",AMapMouseTool.__docgenInfo={description:"Origin Docs See:\nhttps://lbs.amap.com/api/javascript-api/reference/plugin#AMap.MouseTool",displayName:"AMapMouseTool",props:{type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:"enum",value:[{value:'"circle"'},{value:'"marker"'},{value:'"polygon"'},{value:'"polyline"'},{value:'"rectangle"'},{value:'"measureArea"'},{value:'"rule"'},{value:'"rectZoomIn"'},{value:'"rectZoomOut"'}]}},options:{defaultValue:{value:"{}"},description:"",name:"options",required:!1,type:{name:"any"}},onCompleted:{defaultValue:{value:"undefined"},description:"",name:"onCompleted",required:!1,type:{name:"((e: any) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/AMapMouseTool/AMapMouseTool.tsx#AMapMouseTool"]={docgenInfo:AMapMouseTool.__docgenInfo,name:"AMapMouseTool",path:"src/components/AMapMouseTool/AMapMouseTool.tsx#AMapMouseTool"})}catch(__react_docgen_typescript_loader_error){}},516:function(module,exports,__webpack_require__){__webpack_require__(517),__webpack_require__(691),__webpack_require__(692),__webpack_require__(854),__webpack_require__(1074),__webpack_require__(1107),__webpack_require__(1119),__webpack_require__(1121),__webpack_require__(1126),__webpack_require__(1128),module.exports=__webpack_require__(1132)},57:function(module,__webpack_exports__,__webpack_require__){"use strict";var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0);__webpack_exports__.a=function useAMapEventBinder(instance,eventName,handler){Object(react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((function(){var clearEffect;if(!instance||!handler)return clearEffect;instance.on(eventName,handler);var lastEventHandler=handler;return clearEffect=function clearEffect(){lastEventHandler&&instance&&instance.off(eventName,lastEventHandler)}}),[instance,eventName,handler])}},588:function(module,exports){},62:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"SetCenter",(function(){return SetCenter})),__webpack_require__.d(__webpack_exports__,"SetCityName",(function(){return SetCityName})),__webpack_require__.d(__webpack_exports__,"SetZoom",(function(){return SetZoom})),__webpack_require__.d(__webpack_exports__,"withAMapContainer",(function(){return withAMapContainer}));__webpack_require__(3),__webpack_require__(91);var react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(0),react__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__),index__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(29),_AMapAPIContainer_stories_createAMapAPIContainer_stories__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(225),__assign=function(){return(__assign=Object.assign||function(t){for(var s,i=1,n=arguments.length;i<n;i++)for(var p in s=arguments[i])Object.prototype.hasOwnProperty.call(s,p)&&(t[p]=s[p]);return t}).apply(this,arguments)};index__WEBPACK_IMPORTED_MODULE_3__.d.displayName="AMapMap";__webpack_exports__.default={title:"Components/Basic/AMapMap",component:index__WEBPACK_IMPORTED_MODULE_3__.d,decorators:[function withAPIContainer(renderStory,context){return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_AMapAPIContainer_stories_createAMapAPIContainer_stories__WEBPACK_IMPORTED_MODULE_4__.AsyncPluginAPIContainer,null,react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div",{style:{height:"400px"}},renderStory({},context)))}],args:{center:void 0,cityName:void 0,zoom:void 0},argTypes:{center:{description:"中心经纬度",table:{type:{summary:"array"}},control:"array"},cityName:{description:"行政区名称支持中国、省、市、区/县名称，如遇重名的情况，会按城市编码表顺序返回第一个。",control:"text"},zoom:{description:"地图显示的缩放级别，可以设置为浮点数；若 center 与level 未赋值，地图初始化默认显示用户所在城市范围。",control:{type:"number",min:2,max:20,step:1}}},excludeStories:["withAMapContainer"]};var Template=function Template(args){return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(index__WEBPACK_IMPORTED_MODULE_3__.d,__assign({},args))},SetCenter=Template.bind({});SetCenter.args={center:[114.021769,22.530421]};var SetCityName=Template.bind({});SetCityName.args={cityName:"深圳"};var SetZoom=Template.bind({});SetZoom.args={zoom:12};var withAMapContainer=function withAMapContainer(renderStory,context){return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_AMapAPIContainer_stories_createAMapAPIContainer_stories__WEBPACK_IMPORTED_MODULE_4__.AsyncPluginAPIContainer,null,react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement("div",{style:{height:"400px"}},react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(index__WEBPACK_IMPORTED_MODULE_3__.d,null,renderStory({},context))))};SetCenter.parameters=__assign({storySource:{source:"(args) => <AMapMap {...args} />"}},SetCenter.parameters),SetCityName.parameters=__assign({storySource:{source:"(args) => <AMapMap {...args} />"}},SetCityName.parameters),SetZoom.parameters=__assign({storySource:{source:"(args) => <AMapMap {...args} />"}},SetZoom.parameters),withAMapContainer.parameters=__assign({storySource:{source:"(renderStory: Story, context: any) => (\n  <APIContainer>\n    <div style={{ height: '400px' }}>\n      <AMapMap>{renderStory({}, context)}</AMapMap>\n    </div>\n  </APIContainer>\n)"}},withAMapContainer.parameters)},692:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(393)}},[[516,1,2]]]);
//# sourceMappingURL=main.030bec5749c6a6298d45.bundle.js.map