{"version":3,"file":"AMapMouseTool-86d4ae06.js","sources":["../../src/components/AMapAPIContainer/AMapAPIContext.ts","../../node_modules/@amap/amap-jsapi-loader/dist/index.js","../../src/helpers/getGlobalObject.ts","../../src/components/AMapAPIContainer/createAMapAPIContainer.tsx","../../src/hooks/useAMapAPI.ts","../../src/components/AMapMap/AMapMapContext.ts","../../src/hooks/useSetter.ts","../../src/components/AMapMap/AMapMap.tsx","../../src/hooks/useAMap.ts","../../src/components/AMapOverlayGroup/AMapOverlayGroupContext.ts","../../src/hooks/useAMapOverlayBinder.ts","../../src/hooks/useAMapEventBinder.ts","../../src/hooks/useAMapPluginInstance.ts","../../src/hooks/useControlContainerCSSText.ts","../../src/hooks/useControlContainerUpdater.ts","../../src/hooks/useAMapControlBinder.ts","../../src/hooks/useVisible.ts","../../src/components/AMapControlBar/useControlButtonUpdater.ts","../../src/components/AMapControlBar/AMapControlBar.tsx","../../src/components/AMapHawkEye/AMapHawkEye.tsx","../../src/components/AMapScale/AMapScale.tsx","../../src/components/AMapToolBar/AMapToolBar.tsx","../../src/components/AMapMapType/AMapMapType.tsx","../../src/components/AMapOverlayGroup/AMapOverlayGroup.tsx","../../src/components/AMapGeoJSON/AMapGeoJSON.tsx","../../src/components/AMapCircle/AMapCircle.tsx","../../src/components/AMapEllipse/AMapEllipse.tsx","../../src/components/AMapPolygon/AMapPolygon.tsx","../../src/components/AMapPolyline/AMapPolyline.tsx","../../src/components/AMapMarker/AMapMarker.tsx","../../src/components/AMapPolygonEditor/AMapPolygonEditor.tsx","../../src/helpers/amapHelper.ts","../../src/components/AMapPolylineEditor/AMapPolylineEditor.tsx","../../src/components/AMapMouseTool/AMapMouseTool.tsx"],"sourcesContent":["import { createContext } from 'react';\n\nimport type { AMapAPIContextValue } from './interface';\n\nconst defaultContext: AMapAPIContextValue = {\n  __AMAP__: null,\n  __AMAP_UI__: null,\n};\n\nconst AMapAPIContext = createContext<AMapAPIContextValue>(defaultContext);\n\nexport default AMapAPIContext;\n","'use strict';(function(m,p){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=p():\"function\"===typeof define&&define.amd?define(p):(m=m||self,m.AMapLoader=p())})(this,function(){function m(a){var b=[];a.AMapUI&&b.push(p(a.AMapUI));a.Loca&&b.push(r(a.Loca));return Promise.all(b)}function p(a){return new Promise(function(h,c){var f=[];if(a.plugins)for(var e=0;e<a.plugins.length;e+=1)-1==d.AMapUI.plugins.indexOf(a.plugins[e])&&f.push(a.plugins[e]);if(g.AMapUI===b.failed)c(\"\\u524d\\u6b21\\u8bf7\\u6c42 AMapUI \\u5931\\u8d25\");\nelse if(g.AMapUI===b.notload){g.AMapUI=b.loading;d.AMapUI.version=a.version||d.AMapUI.version;e=d.AMapUI.version;var l=document.body||document.head,k=document.createElement(\"script\");k.type=\"text/javascript\";k.src=\"https://webapi.amap.com/ui/\"+e+\"/main.js\";k.onerror=function(a){g.AMapUI=b.failed;c(\"\\u8bf7\\u6c42 AMapUI \\u5931\\u8d25\")};k.onload=function(){g.AMapUI=b.loaded;if(f.length)window.AMapUI.loadUI(f,function(){for(var a=0,b=f.length;a<b;a++){var c=f[a].split(\"/\").slice(-1)[0];window.AMapUI[c]=\narguments[a]}for(h();n.AMapUI.length;)n.AMapUI.splice(0,1)[0]()});else for(h();n.AMapUI.length;)n.AMapUI.splice(0,1)[0]()};l.appendChild(k)}else g.AMapUI===b.loaded?a.version&&a.version!==d.AMapUI.version?c(\"\\u4e0d\\u5141\\u8bb8\\u591a\\u4e2a\\u7248\\u672c AMapUI \\u6df7\\u7528\"):f.length?window.AMapUI.loadUI(f,function(){for(var a=0,b=f.length;a<b;a++){var c=f[a].split(\"/\").slice(-1)[0];window.AMapUI[c]=arguments[a]}h()}):h():a.version&&a.version!==d.AMapUI.version?c(\"\\u4e0d\\u5141\\u8bb8\\u591a\\u4e2a\\u7248\\u672c AMapUI \\u6df7\\u7528\"):\nn.AMapUI.push(function(a){a?c(a):f.length?window.AMapUI.loadUI(f,function(){for(var a=0,b=f.length;a<b;a++){var c=f[a].split(\"/\").slice(-1)[0];window.AMapUI[c]=arguments[a]}h()}):h()})})}function r(a){return new Promise(function(h,c){if(g.Loca===b.failed)c(\"\\u524d\\u6b21\\u8bf7\\u6c42 Loca \\u5931\\u8d25\");else if(g.Loca===b.notload){g.Loca=b.loading;d.Loca.version=a.version||d.Loca.version;var f=d.Loca.version,e=d.AMap.version.startsWith(\"2\"),l=f.startsWith(\"2\");if(e&&!l||!e&&l)c(\"JSAPI \\u4e0e Loca \\u7248\\u672c\\u4e0d\\u5bf9\\u5e94\\uff01\\uff01\");\nelse{e=d.key;l=document.body||document.head;var k=document.createElement(\"script\");k.type=\"text/javascript\";k.src=\"https://webapi.amap.com/loca?v=\"+f+\"&key=\"+e;k.onerror=function(a){g.Loca=b.failed;c(\"\\u8bf7\\u6c42 AMapUI \\u5931\\u8d25\")};k.onload=function(){g.Loca=b.loaded;for(h();n.Loca.length;)n.Loca.splice(0,1)[0]()};l.appendChild(k)}}else g.Loca===b.loaded?a.version&&a.version!==d.Loca.version?c(\"\\u4e0d\\u5141\\u8bb8\\u591a\\u4e2a\\u7248\\u672c Loca \\u6df7\\u7528\"):h():a.version&&a.version!==d.Loca.version?\nc(\"\\u4e0d\\u5141\\u8bb8\\u591a\\u4e2a\\u7248\\u672c Loca \\u6df7\\u7528\"):n.Loca.push(function(a){a?c(a):c()})})}if(!window)throw Error(\"AMap JSAPI can only be used in Browser.\");var b;(function(a){a.notload=\"notload\";a.loading=\"loading\";a.loaded=\"loaded\";a.failed=\"failed\"})(b||(b={}));var d={key:\"\",AMap:{version:\"1.4.15\",plugins:[]},AMapUI:{version:\"1.1\",plugins:[]},Loca:{version:\"1.3.2\"}},g={AMap:b.notload,AMapUI:b.notload,Loca:b.notload},n={AMap:[],AMapUI:[],Loca:[]},q=[],t=function(a){\"function\"==typeof a&&\n(g.AMap===b.loaded?a(window.AMap):q.push(a))};return{load:function(a){return new Promise(function(h,c){if(g.AMap==b.failed)c(\"\");else if(g.AMap==b.notload){var f=a.key,e=a.version,l=a.plugins;f?(window.AMap&&\"lbs.amap.com\"!==location.host&&c(\"\\u7981\\u6b62\\u591a\\u79cdAPI\\u52a0\\u8f7d\\u65b9\\u5f0f\\u6df7\\u7528\"),d.key=f,d.AMap.version=e||d.AMap.version,d.AMap.plugins=l||d.AMap.plugins,g.AMap=b.loading,e=document.body||document.head,window.___onAPILoaded=function(d){delete window.___onAPILoaded;if(d)g.AMap=\nb.failed,c(d);else for(g.AMap=b.loaded,m(a).then(function(){h(window.AMap)})[\"catch\"](c);q.length;)q.splice(0,1)[0]()},l=document.createElement(\"script\"),l.type=\"text/javascript\",l.src=\"https://webapi.amap.com/maps?callback=___onAPILoaded&v=\"+d.AMap.version+\"&key=\"+f+\"&plugin=\"+d.AMap.plugins.join(\",\"),l.onerror=function(a){g.AMap=b.failed;c(a)},e.appendChild(l)):c(\"\\u8bf7\\u586b\\u5199key\")}else if(g.AMap==b.loaded)if(a.key&&a.key!==d.key)c(\"\\u591a\\u4e2a\\u4e0d\\u4e00\\u81f4\\u7684 key\");else if(a.version&&\na.version!==d.AMap.version)c(\"\\u4e0d\\u5141\\u8bb8\\u591a\\u4e2a\\u7248\\u672c JSAPI \\u6df7\\u7528\");else{f=[];if(a.plugins)for(e=0;e<a.plugins.length;e+=1)-1==d.AMap.plugins.indexOf(a.plugins[e])&&f.push(a.plugins[e]);if(f.length)window.AMap.plugin(f,function(){m(a).then(function(){h(window.AMap)})[\"catch\"](c)});else m(a).then(function(){h(window.AMap)})[\"catch\"](c)}else if(a.key&&a.key!==d.key)c(\"\\u591a\\u4e2a\\u4e0d\\u4e00\\u81f4\\u7684 key\");else if(a.version&&a.version!==d.AMap.version)c(\"\\u4e0d\\u5141\\u8bb8\\u591a\\u4e2a\\u7248\\u672c JSAPI \\u6df7\\u7528\");\nelse{var k=[];if(a.plugins)for(e=0;e<a.plugins.length;e+=1)-1==d.AMap.plugins.indexOf(a.plugins[e])&&k.push(a.plugins[e]);t(function(){if(k.length)window.AMap.plugin(k,function(){m(a).then(function(){h(window.AMap)})[\"catch\"](c)});else m(a).then(function(){h(window.AMap)})[\"catch\"](c)})}})},reset:function(){delete window.AMap;delete window.AMapUI;delete window.Loca;d={key:\"\",AMap:{version:\"1.4.15\",plugins:[]},AMapUI:{version:\"1.1\",plugins:[]},Loca:{version:\"1.3.2\"}};g={AMap:b.notload,AMapUI:b.notload,\nLoca:b.notload};n={AMap:[],AMapUI:[],Loca:[]}}}})\n","type GlobalObject = typeof globalThis | typeof global | typeof window;\n\nconst getGlobalObject = (): GlobalObject => globalThis ?? global ?? window;\n\nexport default getGlobalObject;\n","import type { FC } from 'react';\nimport React, { lazy } from 'react';\nimport AMapLoader from '@amap/amap-jsapi-loader';\n\nimport getGlobalObject from '../../helpers/getGlobalObject';\nimport AMapAPIContext from './AMapAPIContext';\n\nconst DEFAULT_AMAP_VERSION = '2.0';\nconst DEFAULT_AMAP_UI_VERSION = '1.1';\n\nconst defaultOptions = {\n  version: DEFAULT_AMAP_VERSION,\n};\n\ntype CreateAMapApiContainerOptions = (Omit<Parameters<typeof AMapLoader.load>[0], 'version'>) & {\n  version?: string\n};\n\nexport const createAMapAPIContainer = (options: CreateAMapApiContainerOptions) => {\n  const { AMapUI: AMapUIOptions, ...otherOptions } = options;\n  const loadAMapAPI = () => AMapLoader.load({\n    ...defaultOptions,\n    ...otherOptions,\n    AMapUI: AMapUIOptions && {\n      version: DEFAULT_AMAP_UI_VERSION,\n      ...AMapUIOptions,\n    },\n  });\n\n  let { AMap, AMapUI } = getGlobalObject();\n\n  return lazy(async () => {\n    if (!AMap || !AMapUI) {\n      await loadAMapAPI();\n      AMap = getGlobalObject().AMap;\n      AMapUI = getGlobalObject().AMapUI;\n    } else {\n      const promises = [];\n\n      if ((otherOptions.plugins?.length ?? 0) > 0) {\n        promises.push(\n          new Promise((r) => {\n            AMap.plugin(otherOptions.plugins!, r);\n          }),\n        );\n      }\n\n      /**\n       * AMapUI.loadUI 不会将异步加载的 UI 插件\n       * 添加的 window.AMapUI 对象上\n       * 以下逻辑暂时无意义。\n       */\n      // if ((AMapUIOptions?.plugins?.length ?? 0) > 0) {\n      //   promises.push(\n      //     new Promise((r) => {\n      //       AMapUI.loadUI(AMapUIOptions!.plugins!, r);\n      //     }),\n      //   );\n      // }\n\n      await Promise.all(promises);\n    }\n\n    const AMapAPIContainer: FC = ({ children }) => (\n      <AMapAPIContext.Provider value={{\n        __AMAP__: AMap,\n        __AMAP_UI__: AMapUI,\n      }}\n      >\n        {children}\n      </AMapAPIContext.Provider>\n    );\n\n    return {\n      default: AMapAPIContainer,\n    };\n  });\n};\n\nexport default createAMapAPIContainer;\n","import { useContext } from 'react';\n\nimport { AMapAPIContext } from '../components/AMapAPIContainer';\n\nconst useAMapAPI = () => useContext(AMapAPIContext);\n\nexport default useAMapAPI;\n","import { createContext } from 'react';\n\nimport type { AMapMapContextValue } from './interface';\n\nconst defaultContext = null;\n\nconst AMapMapContext = createContext<AMapMapContextValue>(defaultContext);\n\nexport default AMapMapContext;\n","import { useEffect } from 'react';\n\nconst useSetter = <T extends Array<any>>(instance: any, methodName: string, ...args: T) => {\n  useEffect(\n    () => {\n      instance?.[methodName]?.(...args);\n    },\n    // a trick way\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [instance, methodName, ...args],\n  );\n};\n\nexport default useSetter;\n","import * as React from 'react';\nimport type { PropsWithChildren } from 'react';\nimport {\n  useEffect,\n  useRef,\n  useState,\n  useImperativeHandle,\n  forwardRef,\n  memo,\n} from 'react';\n\nimport useAMapAPI from '../../hooks/useAMapAPI';\nimport useSetter from '../../hooks/useSetter';\n\nimport { AMapMapProps } from './interface';\nimport AMapMapContext from './AMapMapContext';\n\nconst CONTAINER_STYLE = { width: '100%', height: '100%' };\n\nconst defaultProps = {\n  // eslint-disable-next-line react/default-props-match-prop-types\n  viewMode: '2D',\n  // eslint-disable-next-line react/default-props-match-prop-types\n  features: ['bg', 'point', 'road', 'building'],\n};\n\n// More DOC see: https://a.amap.com/jsapi/static/doc/index.html?v=2#map\nconst AMapMap = forwardRef<any, PropsWithChildren<AMapMapProps>>(\n  ({\n    children,\n    center,\n    cityName,\n    zoom,\n    features,\n    mapStyle,\n    viewMode,\n    pitch,\n  }, ref) => {\n    const { __AMAP__: AMap } = useAMapAPI();\n\n    // container ref\n    const $mapContainer = useRef<HTMLDivElement>(null);\n    const [curMap, setInstance] = useState<AMap.Map | null>(null);\n\n    useEffect(() => {\n      let clearEffect;\n      if (!$mapContainer.current || !AMap) {\n        return clearEffect;\n      }\n\n      const initMap = () => {\n        const newInstance = new AMap.Map($mapContainer.current!, { viewMode });\n\n        // 使用代理调整 map 实例的实现\n        // 添加和删除时，发布事件通知\n        const mapProxy = new Proxy(newInstance, {\n          get(target, p) {\n            if (p === 'add') {\n              const newAddFunc: typeof target.add = (overlays) => {\n                const result = target.add(overlays);\n                newInstance.emit('overlaysAdded' as AMap.EventType, overlays);\n                return result;\n              };\n              return newAddFunc;\n            }\n\n            if (p === 'remove') {\n              const newRemoveFunc: typeof target.remove = (overlays) => {\n                const result = target.remove(overlays);\n                newInstance.emit('overlaysRemoved' as AMap.EventType, overlays);\n                return result;\n              };\n              return newRemoveFunc;\n            }\n            return target[p];\n          },\n        });\n\n        clearEffect = () => {\n          /**\n           * 异步的 destroy map，\n           * 根据 Effect 的执行顺序，先执行父组件的 Effect，后执行子组件 Effect。\n           * 如果此处直接调用 destroy，后面 `useAMapControlBinder` 清除副作用时会导致报错，\n           *\n           * AMap API 会报错，TypeError: Cannot read property 'remove' of undefined\n           * （不太确定）\n           *\n           * 地图对象还存在，如何判断 amap 实例已经 destroy???\n           *\n           */\n          newInstance.destroy();\n        };\n        setInstance(mapProxy); // fire re-render\n      };\n\n      initMap();\n\n      return clearEffect;\n    }, [AMap, viewMode]);\n\n    useImperativeHandle(ref, () => curMap, [curMap]);\n\n    useSetter<Parameters<AMap.Map['setMapStyle']>>(curMap, 'setMapStyle', mapStyle!);\n\n    // set city\n    useEffect(() => {\n      if (cityName) {\n        curMap?.setCity(cityName, () => {});\n      }\n    }, [cityName, curMap]);\n\n    // set zoom\n    useEffect(() => {\n      if (zoom) {\n        curMap?.setZoom(zoom);\n      }\n    }, [zoom, curMap]);\n\n    // set center\n    useEffect(() => {\n      if (center) {\n        curMap?.setCenter(center);\n      }\n    }, [center, curMap]);\n\n    useSetter<Parameters<AMap.Map['setFeatures']>>(curMap, 'setFeatures', features!);\n    useSetter<Parameters<AMap.Map['setPitch']>>(curMap, 'setPitch', pitch!);\n\n    return (\n      <div style={CONTAINER_STYLE} ref={$mapContainer}>\n        <AMapMapContext.Provider value={curMap}>{children}</AMapMapContext.Provider>\n      </div>\n    );\n  },\n);\n\nAMapMap.defaultProps = defaultProps;\n\nexport default memo(AMapMap);\n","import { useContext } from 'react';\n\nimport { AMapMapContext, AMapMapContextValue } from '../components/AMapMap';\nimport { AMapAPIContextValue } from '../components/AMapAPIContainer';\n\nimport useAMapAPI from './useAMapAPI';\n\nconst useAMap = (): AMapAPIContextValue & { map: AMapMapContextValue } => {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  const { __AMAP__, __AMAP_UI__ } = useAMapAPI();\n  const map = useContext(AMapMapContext);\n  return { __AMAP__, __AMAP_UI__, map };\n};\n\nexport default useAMap;\n","import { createContext } from 'react';\n\nconst AMapOverlayGroupContext = createContext<AMap.OverlayGroup | null>(null);\n\nexport default AMapOverlayGroupContext;\n","import { useEffect, useContext } from 'react';\n\nimport AMapOverlayGroupContext from '../components/AMapOverlayGroup/AMapOverlayGroupContext';\nimport useAMap from './useAMap';\n\n/**\n * 将 overlay 绑定至 OverlayGroup 或直接绑定至 Map\n *\n * @param overlay\n */\nconst useAMapOverlayBinder = (overlay: any) => {\n  const overlayGroup = useContext(AMapOverlayGroupContext);\n  const { map } = useAMap();\n\n  useEffect(() => {\n    let clearEffect;\n    if (!overlay) return clearEffect;\n\n    // 上下文中有\n    if (overlayGroup) {\n      overlayGroup.addOverlay(overlay);\n      clearEffect = () => {\n        try {\n          // trick way\n          overlayGroup.removeOverlay(overlay);\n        } catch (error) {\n          // undo anything\n        }\n      };\n    } else if (map) {\n      map.add(overlay);\n\n      clearEffect = () => {\n        try {\n          // trick way\n          map.remove(overlay);\n        } catch (error) {\n          // undo anything\n        }\n      };\n    }\n\n    return clearEffect;\n  }, [overlay, map, overlayGroup]);\n};\n\nexport default useAMapOverlayBinder;\n","import { useEffect } from 'react';\n\nfunction useAMapEventBinder(instance: any, eventName: string, handler?: (event: any) => void) {\n  useEffect(() => {\n    let clearEffect;\n    if (!instance || !handler) {\n      return clearEffect;\n    }\n\n    instance.on(eventName, handler);\n\n    const lastEventHandler = handler;\n\n    clearEffect = () => {\n      if (lastEventHandler && instance) {\n        instance.off(eventName, lastEventHandler);\n      }\n    };\n\n    return clearEffect;\n  }, [instance, eventName, handler]);\n}\n\nexport default useAMapEventBinder;\n","import { useEffect, useState } from 'react';\n\nimport useAMap from './useAMap';\n\ntype UseAMapFNReturnType = ReturnType<typeof useAMap>;\n\nconst useAMapPluginInstance = <T = any>(\n  pluginName: string,\n  initInstance: (AMap: UseAMapFNReturnType['__AMAP__'], amap: UseAMapFNReturnType['map']) => T,\n) => {\n  const { __AMAP__: AMap, map } = useAMap();\n  const [curInstance, setInstance] = useState<T | null>(null);\n\n  useEffect(() => {\n    if (!AMap || !map) return;\n\n    const init = () => {\n      const instance = initInstance(AMap, map);\n      setInstance(instance);\n    };\n\n    if (AMap[pluginName]) {\n      init();\n    } else {\n      AMap.plugin([`AMap.${pluginName}`], init);\n    }\n  }, [AMap, map, pluginName, initInstance]);\n\n  return curInstance;\n};\n\nexport default useAMapPluginInstance;\n","const formatPX = (val: number | string) => `${encodeURIComponent(val)}px`;\n\nconst useControlContainerCSSText = (\n  position: AMap.ControlConfig['position'],\n  offset = [10, 10],\n) => {\n  if (position === 'LT') {\n    return `left:${formatPX(offset[0])};top:${formatPX(offset[1])};`;\n  }\n  if (position === 'RT') {\n    return `right:${formatPX(offset[0])};top:${formatPX(offset[1])};`;\n  }\n  if (position === 'LB') {\n    return `left:${formatPX(offset[0])};bottom:${formatPX(offset[1])};`;\n  }\n  if (position === 'RB') {\n    return `right:${formatPX(offset[0])};bottom:${formatPX(offset[1])};`;\n  }\n  if (typeof position === 'object') {\n    // 保证了 position 中的 key 顺序不相同也有同样的结果，避免重复更新\n    return ['top', 'right', 'bottom', 'left'].reduce((result, key) => {\n      const value = position[key];\n      if (!value) return result;\n      return `${result}${key}:${formatPX(value!)};`;\n    }, '');\n  }\n  return '';\n};\n\nexport default useControlContainerCSSText;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-underscore-dangle */\nimport { useLayoutEffect, useEffect } from 'react';\nimport useControlContainerCSSText from './useControlContainerCSSText';\n\nconst useControlContainerUpdater = <T = any>(\n  instance: T,\n  position: AMap.ControlConfig['position'],\n  offset = [10, 10],\n) => {\n  const containerCSSText = useControlContainerCSSText(position, offset);\n\n  useLayoutEffect(() => {\n    if (!instance || !containerCSSText) return;\n    const $container = (instance as any)._container;\n    $container.style.cssText = containerCSSText!;\n  }, [instance, containerCSSText]);\n\n  useEffect(() => {\n    if (!instance) return;\n    // 同步更新实例的 conf，避免被其它地方使用\n    (instance as any)._config.position = position;\n    (instance as any)._config.offset = offset;\n  }, [instance, position, offset]);\n};\n\nexport default useControlContainerUpdater;\n","import { useEffect } from 'react';\nimport useAMap from './useAMap';\n\nconst useAMapControlBinder = (controlInstance: any) => {\n  const { map } = useAMap();\n\n  useEffect(() => {\n    let clearEffect;\n\n    if (!controlInstance || !map) {\n      return clearEffect;\n    }\n\n    clearEffect = () => {\n      map.removeControl(controlInstance);\n    };\n\n    map.addControl(controlInstance);\n\n    return clearEffect;\n  }, [map, controlInstance]);\n};\n\nexport default useAMapControlBinder;\n","import { useEffect } from 'react';\n\nconst useVisible = (instance: any, visible: boolean) => {\n  useEffect(() => {\n    if (visible) {\n      instance?.show?.();\n    } else {\n      instance?.hide?.();\n    }\n  }, [instance, visible]);\n};\n\nexport default useVisible;\n","/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-param-reassign */\nimport { useLayoutEffect } from 'react';\n\nconst useControlButtonUpdater = (instance: AMap.ControlBar | null, showControlButton?: boolean) => {\n  useLayoutEffect(() => {\n    if (!instance) return;\n    // 同步更新实例的 conf，避免被其它地方使用\n    instance._config.showControlButton = showControlButton;\n\n    const controlButtons: HTMLDivElement[] = [\n      instance._pitchUp,\n      instance._pitchDown,\n      instance._rotateLeft,\n      instance._rotateRight,\n    ];\n    const compass: HTMLDivElement = instance._compass;\n    const luopan: HTMLDivElement = instance._luopan;\n    compass.classList.toggle('amap-compass-black', !showControlButton);\n    if (showControlButton) {\n      luopan.style.removeProperty('background');\n      controlButtons.forEach(($dom) => {\n        $dom.style.removeProperty('display');\n      });\n    } else {\n      luopan.style.setProperty('background', 'rgba(0, 0, 0, 0)');\n      controlButtons.forEach(($dom) => {\n        $dom.style.setProperty('display', 'none');\n      });\n    }\n  }, [instance, showControlButton]);\n};\n\nexport default useControlButtonUpdater;\n","/* eslint-disable react/default-props-match-prop-types */\nimport type { FC } from 'react';\nimport {\n  useCallback,\n  memo,\n} from 'react';\n\nimport useAMapPluginInstance from '../../hooks/useAMapPluginInstance';\nimport useControlContainerUpdater from '../../hooks/useControlContainerUpdater';\nimport useAMapControlBinder from '../../hooks/useAMapControlBinder';\nimport useAMapEventBinder from '../../hooks/useAMapEventBinder';\nimport useVisible from '../../hooks/useVisible';\n\nimport type { AMapControlBarProps } from './interface';\nimport useControlButtonUpdater from './useControlButtonUpdater';\n\n/**\n * Origin API see:\n * https://lbs.amap.com/api/jsapi-v2/documentation#ControlBar\n */\n\nconst defaultProps = {\n  position: 'LT' as AMapControlBarProps['position'],\n  showControlButton: true,\n  visible: true,\n  onShow: undefined,\n  onHide: undefined,\n};\n\nconst AMapControlBar: FC<AMapControlBarProps> = ({\n  position,\n  offset: propOffset,\n  showControlButton,\n  visible,\n  onHide,\n  onShow,\n}) => {\n  const initInstance = useCallback((AMap) => new AMap!.ControlBar(), []);\n  const curInstance = useAMapPluginInstance<AMap.ControlBar>('ControlBar', initInstance);\n\n  // 避免重新创建 ControlBar 实例，自行修改 dom 节点\n  // position 改变\n  useControlContainerUpdater(curInstance, position!, propOffset ?? [10, 10]);\n\n  // 避免重新创建 ControlBar 实例，自行修改 dom 节点\n  // controlButtons 显示/隐藏\n  useControlButtonUpdater(curInstance!, !!showControlButton);\n\n  useVisible(curInstance, visible!);\n\n  useAMapEventBinder(curInstance, 'show', onShow);\n  useAMapEventBinder(curInstance, 'hide', onHide);\n\n  useAMapControlBinder(curInstance);\n\n  return null;\n};\n\nAMapControlBar.defaultProps = defaultProps;\n\nexport default memo(AMapControlBar);\n","/* eslint-disable react/default-props-match-prop-types */\nimport type { FC } from 'react';\nimport {\n  useEffect,\n  useMemo,\n  useCallback,\n  memo,\n} from 'react';\n\nimport useAMapPluginInstance from '../../hooks/useAMapPluginInstance';\nimport useVisible from '../../hooks/useVisible';\nimport useAMapControlBinder from '../../hooks/useAMapControlBinder';\nimport useAMapEventBinder from '../../hooks/useAMapEventBinder';\n\nimport type { AMapHawkEyeProps } from './interface';\n/**\n * Origin API see:\n * https://lbs.amap.com/api/jsapi-v2/documentation#hawkeye\n */\n\nconst defaultProps = {\n  showButton: true,\n  isOpen: true,\n  visible: true,\n  onShow: undefined,\n  onHide: undefined,\n};\n\nconst AMapHawkEye: FC<AMapHawkEyeProps> = ({\n  autoMove,\n  showRectangle,\n  showButton,\n  isOpen,\n  mapStyle,\n  width,\n  height,\n  offset,\n  borderStyle,\n  borderColor,\n  borderRadius,\n  borderWidth,\n  buttonSize,\n  visible,\n  onShow,\n  onHide,\n}) => {\n  const initConfig = useMemo(() => {\n    const conf: AMap.HawkEyeOptions = {};\n\n    if (autoMove !== undefined) conf.autoMove = autoMove;\n    if (showRectangle !== undefined) conf.showRectangle = showRectangle;\n    if (showButton !== undefined) conf.showButton = showButton;\n    // if (isOpen !== undefined) conf.isOpen = isOpen; 有额外的 effect 处理该属性\n    if (mapStyle !== undefined) conf.mapStyle = mapStyle;\n    if (width !== undefined) conf.width = width;\n    if (height !== undefined) conf.height = height;\n    if (offset !== undefined) conf.offset = offset;\n    if (borderStyle !== undefined) conf.borderStyle = borderStyle;\n    if (borderColor !== undefined) conf.borderColor = borderColor;\n    if (borderRadius !== undefined) conf.borderRadius = borderRadius;\n    if (borderWidth !== undefined) conf.borderWidth = borderWidth;\n    if (buttonSize !== undefined) conf.buttonSize = buttonSize;\n\n    return conf;\n  }, [\n    autoMove,\n    showRectangle,\n    showButton,\n    mapStyle,\n    width,\n    height,\n    offset,\n    borderStyle,\n    borderColor,\n    borderRadius,\n    borderWidth,\n    buttonSize,\n  ]);\n\n  const initInstance = useCallback((AMap) => new AMap!.HawkEye(initConfig), [initConfig]);\n  const curInstance = useAMapPluginInstance<AMap.HawkEye>('HawkEye', initInstance);\n\n  // 是否展开\n  useEffect(() => {\n    if (isOpen) {\n      curInstance?.open?.();\n    } else {\n      curInstance?.close?.();\n    }\n  }, [curInstance, isOpen]);\n\n  useVisible(curInstance, !!visible);\n\n  useAMapEventBinder(curInstance, 'show', onShow);\n  useAMapEventBinder(curInstance, 'hide', onHide);\n\n  useAMapControlBinder(curInstance);\n\n  return null;\n};\n\nAMapHawkEye.defaultProps = defaultProps;\n\nexport default memo(AMapHawkEye);\n","/* eslint-disable react/default-props-match-prop-types */\nimport type { FC } from 'react';\nimport {\n  memo,\n} from 'react';\n\nimport useAMapPluginInstance from '../../hooks/useAMapPluginInstance';\nimport useControlContainerUpdater from '../../hooks/useControlContainerUpdater';\nimport useAMapControlBinder from '../../hooks/useAMapControlBinder';\nimport useAMapEventBinder from '../../hooks/useAMapEventBinder';\nimport useVisible from '../../hooks/useVisible';\n\nimport type { AMapScaleProps } from './interface';\n/**\n * Origin API see:\n * https://lbs.amap.com/api/jsapi-v2/documentation#hawkeye\n */\n\nconst defaultProps = {\n  position: 'LB' as AMapScaleProps['position'],\n  visible: true,\n  onShow: undefined,\n  onHide: undefined,\n};\n\nconst initInstance = (AMap: any) => new AMap.Scale();\n\nconst AMapScale: FC<AMapScaleProps> = ({\n  position, offset, visible, onShow, onHide,\n}) => {\n  const curInstance = useAMapPluginInstance('Scale', initInstance);\n\n  useControlContainerUpdater(curInstance, position!, offset);\n\n  useVisible(curInstance, visible!);\n\n  useAMapEventBinder(curInstance, 'show', onShow);\n  useAMapEventBinder(curInstance, 'hide', onHide);\n\n  useAMapControlBinder(curInstance);\n\n  return null;\n};\n\nAMapScale.defaultProps = defaultProps;\n\nexport default memo(AMapScale);\n","/* eslint-disable react/default-props-match-prop-types */\nimport type { FC } from 'react';\nimport {\n  useCallback,\n  memo,\n} from 'react';\n\nimport useAMapPluginInstance from '../../hooks/useAMapPluginInstance';\nimport useAMapControlBinder from '../../hooks/useAMapControlBinder';\nimport useControlContainerUpdater from '../../hooks/useControlContainerUpdater';\nimport useAMapEventBinder from '../../hooks/useAMapEventBinder';\nimport useVisible from '../../hooks/useVisible';\n\nimport type { AMapToolBarProps } from './interface';\n/**\n * Origin API see:\n * https://lbs.amap.com/api/jsapi-v2/documentation#hawkeye\n */\n\nconst defaultProps = {\n  position: 'LT' as AMapToolBarProps['position'],\n  visible: true,\n  onShow: undefined,\n  onHide: undefined,\n};\n\nconst AMapToolBar: FC<AMapToolBarProps> = ({\n  position, offset, visible, onShow, onHide,\n}) => {\n  const initInstance = useCallback((AMap) => new AMap.ToolBar(), []);\n  const curInstance = useAMapPluginInstance<AMap.ToolBar>('ToolBar', initInstance);\n\n  // 自行控制 Control container dom\n  // 避免多起创建实例\n  useControlContainerUpdater(curInstance, position!, offset);\n\n  useVisible(curInstance, visible!);\n\n  useAMapEventBinder(curInstance, 'show', onShow);\n  useAMapEventBinder(curInstance, 'hide', onHide);\n\n  useAMapControlBinder(curInstance);\n\n  return null;\n};\n\nAMapToolBar.defaultProps = defaultProps;\n\nexport default memo(AMapToolBar);\n","/* eslint-disable react/default-props-match-prop-types */\nimport type { FC } from 'react';\nimport {\n  useCallback,\n} from 'react';\n\nimport useAMapPluginInstance from '../../hooks/useAMapPluginInstance';\nimport useAMapControlBinder from '../../hooks/useAMapControlBinder';\nimport useAMapEventBinder from '../../hooks/useAMapEventBinder';\nimport useVisible from '../../hooks/useVisible';\n\nimport type { AMapMapTypeProps } from './interface';\n\n/**\n * Origin API see:\n * https://lbs.amap.com/api/javascript-api-v2/documentation#maptype\n */\n\nconst defaultProps = {\n  defaultType: 0,\n  showTraffic: false,\n  showRoad: false,\n  visible: true,\n  onShow: undefined,\n  onHide: undefined,\n};\n\nconst AMapMapType: FC<AMapMapTypeProps> = ({\n  defaultType,\n  showTraffic,\n  showRoad,\n  visible,\n  onHide,\n  onShow,\n}) => {\n  const initInstance = useCallback((AMap) => new AMap!.MapType({\n    defaultType,\n    showTraffic,\n    showRoad,\n  }), [defaultType, showRoad, showTraffic]);\n  const curInstance = useAMapPluginInstance<AMap.MapType>('MapType', initInstance);\n\n  useVisible(curInstance, !!visible);\n\n  useAMapEventBinder(curInstance, 'show', onShow);\n  useAMapEventBinder(curInstance, 'hide', onHide);\n\n  useAMapControlBinder(curInstance);\n\n  return null;\n};\n\nAMapMapType.defaultProps = defaultProps;\n\nexport default AMapMapType;\n","import type { PropsWithChildren } from 'react';\nimport * as React from 'react';\nimport {\n  forwardRef,\n  useCallback,\n  useImperativeHandle,\n  useEffect,\n} from 'react';\n\nimport useAMapPluginInstance from '../../hooks/useAMapPluginInstance';\nimport useAMapOverlayBinder from '../../hooks/useAMapOverlayBinder';\nimport useAMapEventBinder from '../../hooks/useAMapEventBinder';\nimport useVisible from '../../hooks/useVisible';\n\nimport AMapOverlayGroupContext from './AMapOverlayGroupContext';\nimport type { AMapOverlayGroupProps } from './interface';\n\n// https://lbs.amap.com/api/javascript-api/reference/overlay#overlaygroup\nconst AMapOverlayGroup = forwardRef<AMap.OverlayGroup, PropsWithChildren<AMapOverlayGroupProps>>(\n  (\n    {\n      children,\n      visible,\n      options,\n      onShow,\n      onHide,\n      onClick,\n      onDBLClick,\n      onRightClick,\n      onMousedown,\n      onMouseup,\n      onMouseover,\n      onMouseout,\n      onTouchstart,\n      onTouchmove,\n      onTouchend,\n    },\n    ref,\n  ) => {\n    const initInstance = useCallback((AMap) => new AMap!.OverlayGroup(), []);\n    const curInstance = useAMapPluginInstance<AMap.OverlayGroup>('OverlayGroup', initInstance);\n\n    useImperativeHandle(ref, () => curInstance!, [curInstance]);\n\n    /**\n     * TODO: 解决基于 Effect 实现存在缺陷父组件覆盖自组件的 options 的反直觉效果\n     *\n     * 嵌套使用 OverlayGroup 时， options 是否有效取决于 setOptions 的调用顺序。例如，\n     *\n     * var overlayGroup = new AMap.OverlayGroup([ polyline, polygon ])\n     * overlayGroup.setOptions({\n     *   strokeColor: \"red\" //线颜色\n     * });\n     * var overlayGroup1 = new AMap.OverlayGroup([ overlayGroup, circle ]);\n     * overlayGroup1.setOptions({\n     *   strokeColor: \"yellow\" //线颜色\n     * });\n     *\n     * 此时 polyline，polygon，circle 的 strokeColor 为 \"yellow\"\n     *\n     * */\n    // change options\n    useEffect(() => {\n      if (!options) return;\n      curInstance?.setOptions(options);\n    }, [options, curInstance]);\n\n    useVisible(curInstance, !!visible);\n\n    useAMapEventBinder(curInstance, 'show', onShow);\n    useAMapEventBinder(curInstance, 'hide', onHide);\n    useAMapEventBinder(curInstance, 'click', onClick);\n    useAMapEventBinder(curInstance, 'dblclick', onDBLClick);\n    useAMapEventBinder(curInstance, 'rightclick', onRightClick);\n    useAMapEventBinder(curInstance, 'mousedown', onMousedown);\n    useAMapEventBinder(curInstance, 'mouseup', onMouseup);\n    useAMapEventBinder(curInstance, 'mouseover', onMouseover);\n    useAMapEventBinder(curInstance, 'mouseout', onMouseout);\n    useAMapEventBinder(curInstance, 'touchstart', onTouchstart);\n    useAMapEventBinder(curInstance, 'touchmove', onTouchmove);\n    useAMapEventBinder(curInstance, 'touchend', onTouchend);\n\n    useAMapOverlayBinder(curInstance);\n\n    return (\n      <AMapOverlayGroupContext.Provider value={curInstance}>\n        {children}\n      </AMapOverlayGroupContext.Provider>\n    );\n  },\n);\n\nAMapOverlayGroup.defaultProps = {\n  // eslint-disable-next-line react/default-props-match-prop-types\n  visible: true,\n};\n\nexport default AMapOverlayGroup;\n","import type { FC } from 'react';\nimport { useEffect, useCallback } from 'react';\n\nimport useAMap from '../../hooks/useAMap';\nimport useAMapOverlayBinder from '../../hooks/useAMapOverlayBinder';\nimport useVisible from '../../hooks/useVisible';\nimport useAMapPluginInstance from '../../hooks/useAMapPluginInstance';\n\nimport type {\n  AMapGeoJSONGetOverlayCallback,\n  AMapGeoJSONProps,\n} from './interface';\n\nconst defaultProps = {\n  // eslint-disable-next-line react/default-props-match-prop-types\n  visible: true,\n};\n\nconst useWithAMap = () => {\n  const { __AMAP__: AMap, map } = useAMap();\n  return useCallback(\n    (fn?: AMapGeoJSONGetOverlayCallback) => {\n      if (typeof fn !== 'function') {\n        return fn;\n      }\n      return (geojson: GeoJSON.GeoJSON, lnglat: any) => fn(geojson, lnglat, map, AMap);\n    },\n    [AMap, map],\n  );\n};\n\n// more see\nconst AMapGeoJSON: FC<AMapGeoJSONProps> = ({\n  geoJSON,\n  getPolyline,\n  getMarker,\n  getPolygon,\n  visible,\n  options,\n}) => {\n  const initInstance = useCallback((AMap) => new AMap!.GeoJSON({}), []);\n  const curInstance = useAMapPluginInstance<AMap.GeoJSON>('GeoJSON', initInstance);\n  const withMap = useWithAMap();\n\n  // change getPolyline function\n  useEffect(() => {\n    if (!curInstance) return;\n    // 绕过 API 文档提供接口，不确定是否存在问题\n    // eslint-disable-next-line no-underscore-dangle\n    (curInstance as any)._opts.getPolyline = withMap(getPolyline);\n  }, [curInstance, getPolyline, withMap]);\n\n  // change getMarker function\n  useEffect(() => {\n    if (!curInstance) return;\n    // 绕过 API 文档提供接口，不确定是否存在问题\n    // eslint-disable-next-line no-underscore-dangle\n    (curInstance as any)._opts.getMarker = withMap(getMarker);\n  }, [curInstance, getMarker, withMap]);\n\n  // change getPolygon function\n  useEffect(() => {\n    if (!curInstance) return;\n    // 绕过 API 文档提供接口，不确定是否存在问题\n    // eslint-disable-next-line no-underscore-dangle\n    (curInstance as any)._opts.getPolygon = withMap(getPolygon);\n  }, [curInstance, getPolygon, withMap]);\n\n  // change data\n  useEffect(() => {\n    curInstance?.importData?.(geoJSON);\n  }, [geoJSON, curInstance]);\n\n  // change options\n  useEffect(() => {\n    if (options) {\n      curInstance?.setOptions?.(options);\n    }\n  }, [options, curInstance]);\n\n  useVisible(curInstance, visible!);\n\n  // bind map\n  useAMapOverlayBinder(curInstance);\n\n  return null;\n};\n\nAMapGeoJSON.defaultProps = defaultProps;\n\nexport default AMapGeoJSON;\n","import {\n  forwardRef,\n  useMemo,\n  useImperativeHandle,\n} from 'react';\n\nimport useAMapPluginInstance from '../../hooks/useAMapPluginInstance';\nimport useAMapOverlayBinder from '../../hooks/useAMapOverlayBinder';\nimport useAMapEventBinder from '../../hooks/useAMapEventBinder';\nimport useVisible from '../../hooks/useVisible';\nimport useSetter from '../../hooks/useSetter';\n\nimport type { AMapCircleProps } from './interface';\n\nconst init = (AMap: Parameters<\nParameters<typeof useAMapPluginInstance>[1]\n>[0]) => new AMap!.Circle();\n\n// https://lbs.amap.com/api/javascript-api/reference/overlay#Circle\nconst AMapCircle = forwardRef<AMap.Circle, AMapCircleProps>(\n  (\n    {\n      center,\n      radius,\n      zIndex,\n      bubble,\n      cursor,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeStyle,\n      strokeOpacity,\n      strokeWeight,\n      strokeDasharray,\n      extData,\n      draggable,\n      visible,\n      onShow,\n      onHide,\n      onClick,\n      onDBLClick,\n      onRightClick,\n      onMousedown,\n      onMouseup,\n      onMouseover,\n      onMouseout,\n      onTouchstart,\n      onTouchmove,\n      onTouchend,\n    },\n    ref,\n  ) => {\n    const curInstance = useAMapPluginInstance<AMap.Circle>('Circle', init);\n\n    useImperativeHandle(ref, () => curInstance!, [curInstance]);\n\n    const options: Parameters<AMap.Circle['setOptions']>[0] = useMemo(() => {\n      const tmp = Object.entries({\n        zIndex,\n        bubble,\n        cursor,\n        fillColor,\n        fillOpacity,\n        strokeColor,\n        strokeStyle,\n        strokeOpacity,\n        strokeWeight,\n        strokeDasharray,\n        draggable,\n      })\n        .filter(([,val]) => val !== undefined && val !== null)\n        .reduce((finallyObj, [key, val]) => {\n          // eslint-disable-next-line no-param-reassign\n          finallyObj[key] = val;\n          return finallyObj;\n        }, {});\n      return tmp;\n    }, [\n      zIndex,\n      bubble,\n      cursor,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeStyle,\n      strokeOpacity,\n      strokeWeight,\n      strokeDasharray,\n      draggable,\n    ]);\n    useSetter<Parameters<AMap.Circle['setOptions']>>(curInstance, 'setOptions', options!);\n\n    useSetter<Parameters<AMap.Circle['setCenter']>>(curInstance, 'setCenter', center!);\n    useSetter<Parameters<AMap.Circle['setRadius']>>(curInstance, 'setRadius', radius!);\n    useSetter<Parameters<AMap.Circle['setExtData']>>(curInstance, 'setExtData', extData!);\n\n    useVisible(curInstance, !!visible);\n\n    useAMapEventBinder(curInstance, 'show', onShow);\n    useAMapEventBinder(curInstance, 'hide', onHide);\n    useAMapEventBinder(curInstance, 'click', onClick);\n    useAMapEventBinder(curInstance, 'dblclick', onDBLClick);\n    useAMapEventBinder(curInstance, 'rightclick', onRightClick);\n    useAMapEventBinder(curInstance, 'mousedown', onMousedown);\n    useAMapEventBinder(curInstance, 'mouseup', onMouseup);\n    useAMapEventBinder(curInstance, 'mouseover', onMouseover);\n    useAMapEventBinder(curInstance, 'mouseout', onMouseout);\n    useAMapEventBinder(curInstance, 'touchstart', onTouchstart);\n    useAMapEventBinder(curInstance, 'touchmove', onTouchmove);\n    useAMapEventBinder(curInstance, 'touchend', onTouchend);\n\n    useAMapOverlayBinder(curInstance);\n\n    return null;\n  },\n);\n\nAMapCircle.defaultProps = {\n  visible: true,\n};\n\nexport default AMapCircle;\n","/* eslint-disable react/default-props-match-prop-types */\nimport type { FC } from 'react';\nimport {\n  useCallback,\n  useMemo,\n} from 'react';\n\nimport useAMapPluginInstance from '../../hooks/useAMapPluginInstance';\nimport useSetter from '../../hooks/useSetter';\nimport useAMapOverlayBinder from '../../hooks/useAMapOverlayBinder';\nimport useAMapEventBinder from '../../hooks/useAMapEventBinder';\nimport useVisible from '../../hooks/useVisible';\n\nimport type { AMapEllipseProps } from './interface';\n\n/**\n * Origin API see:\n * https://lbs.amap.com/api/javascript-api-v2/documentation#maptype\n */\n\nconst defaultProps = {\n  visible: true,\n  onShow: undefined,\n  onHide: undefined,\n};\n\nconst AMapEllipse: FC<AMapEllipseProps> = ({\n  center,\n  radius,\n  zIndex,\n  //   height,\n  draggable,\n  extData,\n  cursor,\n  bubble,\n  // style properties\n  fillColor,\n  fillOpacity,\n  strokeColor,\n  strokeOpacity,\n  strokeWeight,\n  strokeStyle,\n  strokeDasharray,\n  //\n  visible,\n  // event properties\n  onHide,\n  onShow,\n  onClick,\n  onDBLClick,\n  onRightClick,\n  onMousedown,\n  onMouseup,\n  onMouseover,\n  onMouseout,\n  onTouchstart,\n  onTouchmove,\n  onTouchend,\n}) => {\n  const initInstance = useCallback((AMap) => new AMap!.Ellipse(), []);\n  const curInstance = useAMapPluginInstance<AMap.Ellipse>('Ellipse', initInstance);\n\n  useSetter<Parameters<AMap.Ellipse['setCenter']>>(curInstance, 'setCenter', center!);\n  useSetter<Parameters<AMap.Ellipse['setRadius']>>(curInstance, 'setRadius', radius!);\n  //   useSetter<Parameters<AMap.Ellipse['setHeight']>>(curInstance, 'setHeight', height!);\n  useSetter<Parameters<AMap.Ellipse['setExtData']>>(curInstance, 'setExtData', extData!);\n\n  const options: Parameters<AMap.Ellipse['setOptions']>[0] = useMemo(() => {\n    const tmp = Object.entries({\n      zIndex,\n      bubble,\n      cursor,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeStyle,\n      strokeOpacity,\n      strokeWeight,\n      strokeDasharray,\n      draggable,\n    })\n      .filter(([,val]) => val !== undefined && val !== null)\n      .reduce((finallyObj, [key, val]) => {\n        // eslint-disable-next-line no-param-reassign\n        finallyObj[key] = val;\n        return finallyObj;\n      }, {});\n    return tmp;\n  }, [\n    zIndex,\n    bubble,\n    cursor,\n    fillColor,\n    fillOpacity,\n    strokeColor,\n    strokeStyle,\n    strokeOpacity,\n    strokeWeight,\n    strokeDasharray,\n    draggable,\n  ]);\n\n  useSetter<Parameters<AMap.Ellipse['setOptions']>>(curInstance, 'setOptions', options!);\n\n  useVisible(curInstance, !!visible);\n\n  useAMapEventBinder(curInstance, 'show', onShow);\n  useAMapEventBinder(curInstance, 'hide', onHide);\n  useAMapEventBinder(curInstance, 'click', onClick);\n  useAMapEventBinder(curInstance, 'dblclick', onDBLClick);\n  useAMapEventBinder(curInstance, 'rightclick', onRightClick);\n  useAMapEventBinder(curInstance, 'mousedown', onMousedown);\n  useAMapEventBinder(curInstance, 'mouseup', onMouseup);\n  useAMapEventBinder(curInstance, 'mouseover', onMouseover);\n  useAMapEventBinder(curInstance, 'mouseout', onMouseout);\n  useAMapEventBinder(curInstance, 'touchstart', onTouchstart);\n  useAMapEventBinder(curInstance, 'touchmove', onTouchmove);\n  useAMapEventBinder(curInstance, 'touchend', onTouchend);\n\n  useAMapOverlayBinder(curInstance);\n\n  return null;\n};\n\nAMapEllipse.defaultProps = defaultProps;\n\nexport default AMapEllipse;\n","/* eslint-disable react/default-props-match-prop-types */\nimport {\n  forwardRef,\n  useImperativeHandle,\n  useCallback,\n  useMemo,\n} from 'react';\n\nimport useAMapPluginInstance from '../../hooks/useAMapPluginInstance';\nimport useSetter from '../../hooks/useSetter';\nimport useAMapOverlayBinder from '../../hooks/useAMapOverlayBinder';\nimport useAMapEventBinder from '../../hooks/useAMapEventBinder';\nimport useVisible from '../../hooks/useVisible';\n\nimport type { AMapPolygonProps } from './interface';\n\n/**\n * Origin API see:\n * https://lbs.amap.com/api/javascript-api-v2/documentation#polygon\n */\n\nconst defaultProps = {\n  visible: true,\n};\n\nconst AMapPolygon = forwardRef<AMap.Polygon, AMapPolygonProps>(({\n  path,\n  //   height,\n  extrusionHeight,\n  extData,\n  // options\n  zIndex,\n  bubble,\n  cursor,\n  strokeColor,\n  strokeWeight,\n  strokeOpacity,\n  fillColor,\n  fillOpacity,\n  draggable,\n  roofColor,\n  wallColor,\n  strokeStyle,\n  strokeDasharray,\n  zooms,\n  //\n  visible,\n  // event properties\n  onHide,\n  onShow,\n  onClick,\n  onDBLClick,\n  onRightClick,\n  onMousedown,\n  onMouseup,\n  onMouseover,\n  onMouseout,\n  onDragstart,\n  onDragging,\n  onDragend,\n  onTouchstart,\n  onTouchmove,\n  onTouchend,\n}, ref) => {\n  const initInstance = useCallback((AMap) => new AMap!.Polygon(), []);\n  const curInstance = useAMapPluginInstance<AMap.Polygon>('Polygon', initInstance);\n\n  useImperativeHandle(ref, () => curInstance!, [curInstance]);\n\n  useSetter<Parameters<AMap.Polygon['setExtData']>>(curInstance, 'setExtData', extData!);\n\n  const options: Parameters<AMap.Polygon['setOptions']>[0] = useMemo(() => {\n    const tmp = Object.entries({\n      zIndex,\n      bubble,\n      cursor,\n      fillColor,\n      fillOpacity,\n      strokeColor,\n      strokeStyle,\n      strokeOpacity,\n      strokeWeight,\n      strokeDasharray,\n      draggable,\n      zooms,\n      roofColor,\n      wallColor,\n    })\n      .filter(([,val]) => val !== undefined && val !== null)\n      .reduce((finallyObj, [key, val]) => {\n        // eslint-disable-next-line no-param-reassign\n        finallyObj[key] = val;\n        return finallyObj;\n      }, {});\n    return tmp;\n  }, [\n    zIndex,\n    bubble,\n    cursor,\n    fillColor,\n    fillOpacity,\n    strokeColor,\n    strokeStyle,\n    strokeOpacity,\n    strokeWeight,\n    strokeDasharray,\n    draggable,\n    zooms,\n    roofColor,\n    wallColor,\n  ]);\n\n  useSetter<Parameters<AMap.Polygon['setOptions']>>(curInstance, 'setOptions', options!);\n  //   useSetter<Parameters<AMap.Polygon['setHeight']>>(curInstance, 'setHeight', height!);\n  useSetter<Parameters<AMap.Polygon['setExtrusionHeight']>>(curInstance, 'setExtrusionHeight', extrusionHeight!);\n  useSetter<Parameters<AMap.Polygon['setPath']>>(curInstance, 'setPath', path!);\n\n  useVisible(curInstance, !!visible);\n\n  useAMapEventBinder(curInstance, 'hide', onHide);\n  useAMapEventBinder(curInstance, 'show', onShow);\n  useAMapEventBinder(curInstance, 'click', onClick);\n  useAMapEventBinder(curInstance, 'dblclick', onDBLClick);\n  useAMapEventBinder(curInstance, 'rightclick', onRightClick);\n  useAMapEventBinder(curInstance, 'mousedown', onMousedown);\n  useAMapEventBinder(curInstance, 'mouseup', onMouseup);\n  useAMapEventBinder(curInstance, 'mouseover', onMouseover);\n  useAMapEventBinder(curInstance, 'mouseout', onMouseout);\n  useAMapEventBinder(curInstance, 'dragstart', onDragstart);\n  useAMapEventBinder(curInstance, 'dragging', onDragging);\n  useAMapEventBinder(curInstance, 'dragend', onDragend);\n  useAMapEventBinder(curInstance, 'touchstart', onTouchstart);\n  useAMapEventBinder(curInstance, 'touchmove', onTouchmove);\n  useAMapEventBinder(curInstance, 'touchend', onTouchend);\n\n  useAMapOverlayBinder(curInstance);\n\n  return null;\n});\n\nAMapPolygon.defaultProps = defaultProps;\n\nexport default AMapPolygon;\n","/* eslint-disable react/default-props-match-prop-types */\nimport {\n  forwardRef,\n  useImperativeHandle,\n  useCallback,\n  useMemo,\n} from 'react';\n\nimport useAMapPluginInstance from '../../hooks/useAMapPluginInstance';\nimport useSetter from '../../hooks/useSetter';\nimport useAMapOverlayBinder from '../../hooks/useAMapOverlayBinder';\nimport useAMapEventBinder from '../../hooks/useAMapEventBinder';\nimport useVisible from '../../hooks/useVisible';\n\nimport type { AMapPolylineProps } from './interface';\n\n/**\n * Origin API see:\n * https://lbs.amap.com/api/javascript-api-v2/documentation#polyline\n */\n\nconst defaultProps = {\n  visible: true,\n};\n\nconst AMapPolyline = forwardRef<AMap.Polyline, AMapPolylineProps>(({\n  path,\n  //   height,\n  extData,\n  visible,\n  // style options\n  zIndex,\n  strokeColor,\n  strokeWeight,\n  strokeOpacity,\n  strokeStyle,\n  strokeDasharray,\n  borderWeight,\n  showDir,\n  dirColor,\n  dirImg,\n  isOutline,\n  outlineColor,\n  cursor,\n  lineJoin,\n  lineCap,\n  geodesic,\n  // other options\n  draggable,\n  bubble,\n  zooms,\n  // event properties\n  onHide,\n  onShow,\n  onClick,\n  onDBLClick,\n  onRightClick,\n  onMousedown,\n  onMouseup,\n  onMouseover,\n  onMouseout,\n  onDragstart,\n  onDragging,\n  onDragend,\n  onTouchstart,\n  onTouchmove,\n  onTouchend,\n}, ref) => {\n  const initInstance = useCallback((AMap) => new AMap!.Polyline(), []);\n  const curInstance = useAMapPluginInstance<AMap.Polyline>('Polyline', initInstance);\n\n  useImperativeHandle(ref, () => curInstance!, [curInstance]);\n\n  useSetter<Parameters<AMap.Polyline['setExtData']>>(curInstance, 'setExtData', extData!);\n\n  const options: Parameters<AMap.Polyline['setOptions']>[0] = useMemo(() => {\n    const tmp = Object.entries({\n      // style options\n      zIndex,\n      strokeColor,\n      strokeWeight,\n      strokeOpacity,\n      strokeStyle,\n      strokeDasharray,\n      borderWeight,\n      showDir,\n      dirColor,\n      dirImg,\n      isOutline,\n      outlineColor,\n      cursor,\n      lineJoin,\n      lineCap,\n      geodesic,\n      // other options\n      draggable,\n      bubble,\n      zooms,\n    })\n      .filter(([,val]) => val !== undefined && val !== null)\n      .reduce((finallyObj, [key, val]) => {\n        // eslint-disable-next-line no-param-reassign\n        finallyObj[key] = val;\n        return finallyObj;\n      }, {});\n    return tmp;\n  }, [\n    // style options\n    zIndex,\n    strokeColor,\n    strokeWeight,\n    strokeOpacity,\n    strokeStyle,\n    strokeDasharray,\n    borderWeight,\n    showDir,\n    dirColor,\n    dirImg,\n    isOutline,\n    outlineColor,\n    cursor,\n    lineJoin,\n    lineCap,\n    geodesic,\n    // other options\n    draggable,\n    bubble,\n    zooms,\n  ]);\n\n  useSetter<Parameters<AMap.Polyline['setOptions']>>(curInstance, 'setOptions', options!);\n  //   useSetter<Parameters<AMap.Polyline['setHeight']>>(curInstance, 'setHeight', height!);\n  useSetter<Parameters<AMap.Polyline['setPath']>>(curInstance, 'setPath', path!);\n\n  useVisible(curInstance, !!visible);\n\n  useAMapEventBinder(curInstance, 'hide', onHide);\n  useAMapEventBinder(curInstance, 'show', onShow);\n  useAMapEventBinder(curInstance, 'click', onClick);\n  useAMapEventBinder(curInstance, 'dblclick', onDBLClick);\n  useAMapEventBinder(curInstance, 'rightclick', onRightClick);\n  useAMapEventBinder(curInstance, 'mousedown', onMousedown);\n  useAMapEventBinder(curInstance, 'mouseup', onMouseup);\n  useAMapEventBinder(curInstance, 'mouseover', onMouseover);\n  useAMapEventBinder(curInstance, 'mouseout', onMouseout);\n  useAMapEventBinder(curInstance, 'dragstart', onDragstart);\n  useAMapEventBinder(curInstance, 'dragging', onDragging);\n  useAMapEventBinder(curInstance, 'dragend', onDragend);\n  useAMapEventBinder(curInstance, 'touchstart', onTouchstart);\n  useAMapEventBinder(curInstance, 'touchmove', onTouchmove);\n  useAMapEventBinder(curInstance, 'touchend', onTouchend);\n\n  useAMapOverlayBinder(curInstance);\n\n  return null;\n});\n\nAMapPolyline.defaultProps = defaultProps;\n\nexport default AMapPolyline;\n","/* eslint-disable react/default-props-match-prop-types */\nimport type { FC } from 'react';\nimport {\n  useCallback,\n} from 'react';\n\nimport useAMapPluginInstance from '../../hooks/useAMapPluginInstance';\nimport useAMapOverlayBinder from '../../hooks/useAMapOverlayBinder';\nimport useAMapEventBinder from '../../hooks/useAMapEventBinder';\nimport useSetter from '../../hooks/useSetter';\nimport useVisible from '../../hooks/useVisible';\n\nimport type { AMapMarkerProps } from './interface';\n\n/**\n * More Details See:\n *\n * https://a.amap.com/jsapi/static/doc/index.html?v=2#marker\n * https://lbs.amap.com/api/javascript-api/reference/overlay#marker\n *\n */\n\nconst defaultProps = {\n  anchor: 'center' as AMapMarkerProps['anchor'],\n  cursor: 'pointer',\n  angle: 0,\n  zIndex: 12,\n  // isTop: false,\n  clickable: true,\n  draggable: false,\n  visible: true,\n};\n\nconst AMapMarker: FC<AMapMarkerProps> = ({\n  title,\n  icon,\n  zooms,\n  label,\n  clickable,\n  draggable,\n  cursor,\n  extData,\n  position,\n  anchor,\n  offset,\n  angle,\n  size,\n  zIndex,\n  content,\n  //\n  // isTop, // 推荐 z-index 控制\n  visible,\n  // event\n  onHide,\n  onShow,\n  onClick,\n  onDBLClick,\n  onRightClick,\n  onMousemove,\n  onMousedown,\n  onMouseup,\n  onMouseover,\n  onMouseout,\n  onTouchstart,\n  onTouchmove,\n  onTouchend,\n  onDragstart,\n  onDragging,\n  onDragend,\n  onMoving,\n  onMoveEnd,\n  onMoveAlong,\n}) => {\n  const initInstance = useCallback((AMap) => new AMap!.Marker({ zooms }), [zooms]);\n  const curInstance = useAMapPluginInstance<AMap.Marker>('Marker', initInstance);\n\n  useVisible(curInstance, !!visible);\n\n  useSetter<Parameters<AMap.Marker['setPosition']>>(curInstance, 'setPosition', position!);\n\n  useSetter<Parameters<AMap.Marker['setTitle']>>(curInstance, 'setTitle', title!);\n  // useSetter<Parameters<AMap.Marker['setHeight']>>(curInstance, 'setHeight', height);\n  useSetter<Parameters<AMap.Marker['setIcon']>>(curInstance, 'setIcon', icon!);\n  useSetter<Parameters<AMap.Marker['setLabel']>>(curInstance, 'setLabel', label!);\n  useSetter<Parameters<AMap.Marker['setClickable']>>(curInstance, 'setClickable', clickable);\n  useSetter<Parameters<AMap.Marker['setDraggable']>>(curInstance, 'setDraggable', draggable!);\n  // useSetter<Parameters<AMap.Marker['setTop']>>(curInstance, 'setTop', isTop);\n  useSetter<Parameters<AMap.Marker['setCursor']>>(curInstance, 'setCursor', cursor!);\n  useSetter<Parameters<AMap.Marker['setExtData']>>(curInstance, 'setExtData', extData);\n  useSetter<Parameters<AMap.Marker['setAnchor']>>(curInstance, 'setAnchor', anchor!);\n  useSetter<Parameters<AMap.Marker['setOffset']>>(curInstance, 'setOffset', offset!);\n  useSetter<Parameters<AMap.Marker['setAngle']>>(curInstance, 'setAngle', angle!);\n  useSetter<Parameters<AMap.Marker['setSize']>>(curInstance, 'setSize', size!);\n  useSetter<Parameters<AMap.Marker['setzIndex']>>(curInstance, 'setzIndex', zIndex!);\n  useSetter<Parameters<AMap.Marker['setContent']>>(curInstance, 'setContent', content);\n\n  useAMapEventBinder(curInstance, 'show', onShow);\n  useAMapEventBinder(curInstance, 'hide', onHide);\n  useAMapEventBinder(curInstance, 'click', onClick);\n  useAMapEventBinder(curInstance, 'dblclick', onDBLClick);\n  useAMapEventBinder(curInstance, 'rightclick', onRightClick);\n  useAMapEventBinder(curInstance, 'mousemove', onMousemove);\n  useAMapEventBinder(curInstance, 'mousedown', onMousedown);\n  useAMapEventBinder(curInstance, 'mouseup', onMouseup);\n  useAMapEventBinder(curInstance, 'mouseover', onMouseover);\n  useAMapEventBinder(curInstance, 'mouseout', onMouseout);\n  useAMapEventBinder(curInstance, 'touchstart', onTouchstart);\n  useAMapEventBinder(curInstance, 'touchmove', onTouchmove);\n  useAMapEventBinder(curInstance, 'touchend', onTouchend);\n  useAMapEventBinder(curInstance, 'dragstart', onDragstart);\n  useAMapEventBinder(curInstance, 'dragging', onDragging);\n  useAMapEventBinder(curInstance, 'dragend', onDragend);\n  useAMapEventBinder(curInstance, 'moving', onMoving);\n  useAMapEventBinder(curInstance, 'moveend', onMoveEnd);\n  useAMapEventBinder(curInstance, 'movealong', onMoveAlong);\n\n  useAMapOverlayBinder(curInstance);\n\n  return null;\n};\n\nAMapMarker.defaultProps = defaultProps;\n\nexport default AMapMarker;\n","import type { FC } from 'react';\nimport {\n  useCallback,\n  useEffect,\n  useRef,\n} from 'react';\n\nimport useAMap from '../../hooks/useAMap';\nimport useAMapPluginInstance from '../../hooks/useAMapPluginInstance';\n\nimport type { AMapPolygonEditorProps } from './interface';\n\nconst isPolygonFeature = (feature: any) => feature.className === 'Overlay.Polygon';\n\nconst AMapPolygonEditor: FC<AMapPolygonEditorProps> = ({\n  computeTarget,\n  disabled,\n  computeAdsorbPolygons,\n  onChange,\n}) => {\n  const $lastOnChange = useRef<AMapPolygonEditorProps['onChange']>(onChange);\n  $lastOnChange.current = onChange;\n\n  const initInstance = useCallback((AMap, map) => new AMap!.PolygonEditor(map), []);\n  const curInstance = useAMapPluginInstance<AMap.PolygonEditor>('PolygonEditor', initInstance);\n  const { map } = useAMap();\n\n  const reSetTarget = useCallback(() => {\n    if (!map) return;\n    if (!curInstance) return;\n    const allPolygons: AMap.Polygon[] = map.getAllOverlays('polygon') || [];\n    const newTarget = computeTarget(allPolygons) ?? null;\n    curInstance.setTarget(newTarget);\n  }, [map, computeTarget, curInstance]);\n\n  // 获取重新计算 target 然后更新\n  // computeTarget 更新 => reSetTarget 更新\n  // 更新后重新计算并执行\n  useEffect(() => {\n    reSetTarget();\n  }, [map, reSetTarget]);\n\n  // 监听地图中 overlays 的增加和减少\n  // 重新基于 computeTarget 计算 target\n  useEffect(() => {\n    let clearEffect;\n    if (!map) return clearEffect;\n\n    const handleOverlayChanged = (features: any[]) => {\n      if (isPolygonFeature(features) || (\n        Array.isArray(features)\n        && features.some(isPolygonFeature)\n      )) {\n        reSetTarget();\n      }\n    };\n\n    clearEffect = () => {\n      map.off('overlaysRemoved' as AMap.EventType, handleOverlayChanged);\n      map.off('overlaysAdded' as AMap.EventType, handleOverlayChanged);\n    };\n    map.on('overlaysRemoved' as AMap.EventType, handleOverlayChanged);\n    map.on('overlaysAdded' as AMap.EventType, handleOverlayChanged);\n\n    return clearEffect;\n  }, [map, reSetTarget]);\n\n  const reSetAdsorbPolygons = useCallback(() => {\n    if (!map) return;\n    if (!curInstance) return;\n    const allPolygons: AMap.Polygon[] = map.getAllOverlays('polygon') || [];\n    const adsorbPolygons = computeAdsorbPolygons?.(allPolygons);\n    if (adsorbPolygons) {\n      curInstance.setAdsorbPolygons(adsorbPolygons);\n    } else {\n      curInstance.clearAdsorbPolygons();\n    }\n  }, [map, computeAdsorbPolygons, curInstance]);\n\n  // 获取重新计算 adsorbPolygons 然后更新\n  // computeAdsorbPolygons 更新 => reSetAdsorbPolygons 更新\n  // 更新后重新计算并执行\n  useEffect(() => {\n    reSetAdsorbPolygons();\n  }, [map, reSetAdsorbPolygons]);\n\n  // 监听地图中 overlays 的增加和减少\n  // 重新基于 computeTarget 计算 target\n  useEffect(() => {\n    let clearEffect;\n    if (!map) return clearEffect;\n\n    const handleOverlayChanged = (features: any[]) => {\n      if (isPolygonFeature(features) || (\n        Array.isArray(features)\n        && features.some(isPolygonFeature)\n      )) {\n        reSetAdsorbPolygons();\n      }\n    };\n\n    clearEffect = () => {\n      map.off('overlaysRemoved' as AMap.EventType, handleOverlayChanged);\n      map.off('overlaysAdded' as AMap.EventType, handleOverlayChanged);\n    };\n    map.on('overlaysRemoved' as AMap.EventType, handleOverlayChanged);\n    map.on('overlaysAdded' as AMap.EventType, handleOverlayChanged);\n\n    return clearEffect;\n  }, [map, reSetAdsorbPolygons]);\n\n  // 监听变化，触发 onChange 通知\n  useEffect(() => {\n    let clearEffect;\n    if (!curInstance) return clearEffect;\n\n    const triggerChangeHandler = (obj: any) => {\n      $lastOnChange.current?.(obj);\n    };\n\n    const memoInstance = curInstance;\n\n    clearEffect = () => {\n      memoInstance.off('add', triggerChangeHandler);\n      memoInstance.off('addnode', triggerChangeHandler);\n      memoInstance.off('adjust', triggerChangeHandler);\n      memoInstance.off('removenode', triggerChangeHandler);\n    };\n\n    memoInstance.on('add', triggerChangeHandler);\n    memoInstance.on('addnode', triggerChangeHandler);\n    memoInstance.on('adjust', triggerChangeHandler);\n    memoInstance.on('removenode', triggerChangeHandler);\n\n    return clearEffect;\n  }, [curInstance]);\n\n  // 是否打开\n  useEffect(() => {\n    if (!curInstance) return;\n\n    if (disabled) {\n      curInstance.close();\n    } else {\n      curInstance.open();\n    }\n  }, [curInstance, disabled]);\n\n  return null;\n};\n\nAMapPolygonEditor.defaultProps = {\n  // eslint-disable-next-line react/default-props-match-prop-types\n  disabled: false,\n  // eslint-disable-next-line react/default-props-match-prop-types\n  computeAdsorbPolygons: (allPolygons) => allPolygons,\n};\n\nexport default AMapPolygonEditor;\n","export const isLatLng = (p: any): p is AMap.LngLat => !!('lat' in p && 'lng' in p);\n\nexport const isLatLngArr = (p: any): p is AMap.LngLat[] => p.every(isLatLng);\n\nexport const isPolyline = (target: any): target is AMap.Polyline => target.className === 'Overlay.Polyline';\n","import type { FC } from 'react';\nimport {\n  useCallback,\n  useEffect,\n  useRef,\n} from 'react';\nimport type {\n  _PolylineEditor as PolylineEditor,\n} from '@amap/amap-jsapi-types/plugins/PolylineEditor';\n\nimport useAMap from '../../hooks/useAMap';\nimport useAMapPluginInstance from '../../hooks/useAMapPluginInstance';\nimport { isPolyline } from '../../helpers/amapHelper';\n\nimport type { AMapPolylineEditorProps } from './interface';\n\n// https://lbs.amap.com/api/javascript-api-v2/documentation#polylineeditor\nconst AMapPolylineEditor: FC<AMapPolylineEditorProps> = ({\n  computeTarget,\n  disabled,\n  onChange,\n}) => {\n  const $lastOnChange = useRef<AMapPolylineEditorProps['onChange']>(onChange);\n  $lastOnChange.current = onChange;\n\n  const initInstance = useCallback((AMap, map) => new AMap!.PolylineEditor(map), []);\n  // why PolylineEditor2, see: https://github.com/AMap-Web/amap-jsapi-types/pull/22\n  const curInstance = useAMapPluginInstance<PolylineEditor>('PolylineEditor', initInstance);\n  const { map } = useAMap();\n\n  const reSetTarget = useCallback(() => {\n    if (!map) return;\n    if (!curInstance) return;\n    const allPolyline: AMap.Polyline[] = map.getAllOverlays('polyline') || [];\n    const newTarget = computeTarget(allPolyline) ?? null;\n    curInstance.setTarget(newTarget!);\n  }, [map, computeTarget, curInstance]);\n\n  // 获取重新计算 target 然后更新\n  // computeTarget 更新 => reSetTarget 更新\n  // 更新后重新计算并执行\n  useEffect(() => {\n    reSetTarget();\n  }, [reSetTarget]);\n\n  // 监听地图中 overlays 的增加和减少\n  // 重新基于 computeTarget 计算 target\n  useEffect(() => {\n    let clearEffect;\n    if (!map) return clearEffect;\n\n    const handleOverlayChanged = (features: any[]) => {\n      if (isPolyline(features) || (\n        Array.isArray(features)\n        && features.some(isPolyline)\n      )) {\n        reSetTarget();\n      }\n    };\n\n    clearEffect = () => {\n      map.off('overlaysRemoved' as AMap.EventType, handleOverlayChanged);\n      map.off('overlaysAdded' as AMap.EventType, handleOverlayChanged);\n    };\n    map.on('overlaysRemoved' as AMap.EventType, handleOverlayChanged);\n    map.on('overlaysAdded' as AMap.EventType, handleOverlayChanged);\n\n    return clearEffect;\n  }, [map, reSetTarget]);\n\n  // 监听变化，触发 onChange 通知\n  useEffect(() => {\n    let clearEffect;\n    if (!curInstance) return clearEffect;\n\n    const triggerChangeHandler = (obj: any) => {\n      $lastOnChange.current?.(obj);\n    };\n\n    const memoInstance = curInstance;\n\n    clearEffect = () => {\n      memoInstance.off('add', triggerChangeHandler);\n      memoInstance.off('addnode', triggerChangeHandler);\n      memoInstance.off('adjust', triggerChangeHandler);\n      memoInstance.off('removenode', triggerChangeHandler);\n    };\n\n    memoInstance.on('add', triggerChangeHandler);\n    memoInstance.on('addnode', triggerChangeHandler);\n    memoInstance.on('adjust', triggerChangeHandler);\n    memoInstance.on('removenode', triggerChangeHandler);\n\n    return clearEffect;\n  }, [curInstance]);\n\n  // 是否打开\n  useEffect(() => {\n    if (!curInstance) return;\n\n    if (disabled) {\n      curInstance.close();\n    } else {\n      curInstance.open();\n    }\n  }, [curInstance, disabled]);\n\n  return null;\n};\n\nAMapPolylineEditor.defaultProps = {\n  // eslint-disable-next-line react/default-props-match-prop-types\n  disabled: false,\n};\n\nexport default AMapPolylineEditor;\n","import {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n} from 'react';\n\nimport useAMapEventBinder from '../../hooks/useAMapEventBinder';\nimport useAMapPluginInstance from '../../hooks/useAMapPluginInstance';\n\nimport type { AMapMouseToolProps } from './interface';\n\nconst initInstance = (AMap: typeof global.AMap, map: AMap.Map) => new AMap!.MouseTool(map!);\n/**\n *\n * Origin Docs See:\n * https://lbs.amap.com/api/javascript-api/reference/plugin#AMap.MouseTool\n *\n */\nconst AMapMouseTool = forwardRef<AMap.MouseTool, AMapMouseToolProps>(\n  ({\n    type,\n    options,\n    onCompleted,\n  }, ref) => {\n    const curInstance = useAMapPluginInstance<AMap.MouseTool>(\n      'MouseTool',\n      initInstance,\n    );\n\n    useImperativeHandle(ref, () => curInstance!, [curInstance]);\n\n    useAMapEventBinder(curInstance, 'draw', onCompleted);\n\n    useEffect(() => {\n      let clearEffect;\n      if (!curInstance) return clearEffect;\n\n      clearEffect = () => curInstance.close(false);\n\n      curInstance[type]((options ?? {}) as { [k: string]: any });\n\n      return clearEffect;\n    }, [curInstance, options, type]);\n\n    return null;\n  },\n);\n\nAMapMouseTool.defaultProps = {\n  options: {},\n  onCompleted: undefined,\n};\n\nexport default AMapMouseTool;\n"],"names":["defaultContext","AMapAPIContext","createContext","m","p","module","this","a","b","r","h","c","f","e","d","g","l","k","n","q","t","getGlobalObject","DEFAULT_AMAP_VERSION","DEFAULT_AMAP_UI_VERSION","defaultOptions","createAMapAPIContainer","options","AMapUIOptions","otherOptions","loadAMapAPI","AMapLoader","AMap","AMapUI","lazy","promises","_a","children","jsx","useAMapAPI","useContext","AMapMapContext","useSetter","instance","methodName","args","useEffect","CONTAINER_STYLE","defaultProps","AMapMap","forwardRef","center","cityName","zoom","features","mapStyle","viewMode","pitch","ref","$mapContainer","useRef","curMap","setInstance","useState","clearEffect","newInstance","mapProxy","target","overlays","result","useImperativeHandle","AMapMap$1","memo","useAMap","__AMAP__","__AMAP_UI__","map","AMapOverlayGroupContext","useAMapOverlayBinder","overlay","overlayGroup","useAMapEventBinder","eventName","handler","lastEventHandler","useAMapPluginInstance","pluginName","initInstance","curInstance","init","formatPX","val","useControlContainerCSSText","position","offset","key","value","useControlContainerUpdater","containerCSSText","useLayoutEffect","$container","useAMapControlBinder","controlInstance","useVisible","visible","_b","useControlButtonUpdater","showControlButton","controlButtons","compass","luopan","$dom","AMapControlBar","propOffset","onHide","onShow","useCallback","AMapControlBar$1","AMapHawkEye","autoMove","showRectangle","showButton","isOpen","width","height","borderStyle","borderColor","borderRadius","borderWidth","buttonSize","initConfig","useMemo","conf","AMapHawkEye$1","AMapScale","AMapScale$1","AMapToolBar","AMapToolBar$1","AMapMapType","defaultType","showTraffic","showRoad","AMapMapType$1","AMapOverlayGroup","onClick","onDBLClick","onRightClick","onMousedown","onMouseup","onMouseover","onMouseout","onTouchstart","onTouchmove","onTouchend","useWithAMap","fn","geojson","lnglat","AMapGeoJSON","geoJSON","getPolyline","getMarker","getPolygon","withMap","AMapCircle","radius","zIndex","bubble","cursor","fillColor","fillOpacity","strokeColor","strokeStyle","strokeOpacity","strokeWeight","strokeDasharray","extData","draggable","finallyObj","AMapEllipse","AMapPolygon","path","extrusionHeight","roofColor","wallColor","zooms","onDragstart","onDragging","onDragend","AMapPolyline","borderWeight","showDir","dirColor","dirImg","isOutline","outlineColor","lineJoin","lineCap","geodesic","AMapMarker","title","icon","label","clickable","anchor","angle","size","content","onMousemove","onMoving","onMoveEnd","onMoveAlong","AMapMarker$1","isPolygonFeature","feature","AMapPolygonEditor","computeTarget","disabled","computeAdsorbPolygons","onChange","$lastOnChange","map2","reSetTarget","allPolygons","newTarget","handleOverlayChanged","reSetAdsorbPolygons","adsorbPolygons","triggerChangeHandler","obj","memoInstance","isPolyline","AMapPolylineEditor","allPolyline","AMapMouseTool","type","onCompleted"],"mappings":"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","x_google_ignoreList":[1]}